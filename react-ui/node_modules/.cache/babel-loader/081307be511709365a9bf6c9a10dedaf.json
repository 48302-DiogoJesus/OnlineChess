{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\onlinechess\\\\src\\\\pages\\\\MainPage\\\\inner\\\\OpenGame\\\\OpenGame.tsx\",\n    _s = $RefreshSig$();\n\nimport './OpenGame.css';\nimport '../../../../global-css/switches.css';\nimport { useRef, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Server from '../../../../server/server';\nimport Alerts from '../../../../components/Alerts/sa-alerts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpenGame() {\n  _s();\n\n  const navigate = useNavigate();\n  const gameId_input = useRef();\n  const [singlePlayer, setSinglePlayer] = useState(false);\n\n  async function handleOpenGame() {\n    if (singlePlayer) {\n      navigate(`/game/sp-${getRandomGameID()}`);\n    }\n\n    const gameIdValue = validateGameID(true);\n\n    if (gameIdValue == false) {\n      return;\n    }\n\n    const result = await Server.createGame(gameIdValue);\n    if (result.success) Alerts.showNotification(\"Game Created! You can join now.\");\n  }\n\n  function handleJoinGame() {\n    const gameIdValue = validateGameID(true);\n    if (gameIdValue == false) return;\n    navigate(`/game/${gameIdValue}`);\n  }\n\n  function validateGameID() {\n    let showError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    const gameIdValue = gameId_input.current.value;\n\n    if (!(gameIdValue.length >= 5 && gameIdValue.length <= 20)) {\n      if (showError) Alerts.showNotification(\"Invalid Game ID. It must have between 5 and 20 characters\");\n      return false;\n    }\n\n    return gameIdValue;\n  }\n\n  function handleInputChange() {\n    validateGameID();\n  }\n\n  function toggleSingleplayer() {\n    setSinglePlayer(!singlePlayer);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"open-game-inner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"header\",\n      children: \"Open a Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"key\",\n        children: \"Game ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleInputChange,\n          ref: gameId_input,\n          className: \"game-id form-control\",\n          placeholder: \"Game ID\",\n          \"aria-label\": \"Game ID\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"key\",\n        children: \"Singleplayer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"value\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"switch\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            onClick: toggleSingleplayer,\n            id: \"slider-input\",\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"slider round\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-game-btn\",\n        onClick: handleOpenGame,\n        children: \"CREATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"open-game-btn\",\n        onClick: handleJoinGame,\n        children: \"JOIN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OpenGame, \"KAK3AHcq3Qj8g50BPyfQ8a3QR20=\", false, function () {\n  return [useNavigate];\n});\n\n_c = OpenGame;\n\nfunction getRandomGameID() {\n  return 'xxxx-xxxx-xxx-xxxx'.replace(/[x]/g, c => {\n    const r = Math.floor(Math.random() * 16);\n    return r.toString(16);\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OpenGame\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/MainPage/inner/OpenGame/OpenGame.tsx"],"names":["useRef","useState","useNavigate","Server","Alerts","OpenGame","navigate","gameId_input","singlePlayer","setSinglePlayer","handleOpenGame","getRandomGameID","gameIdValue","validateGameID","result","createGame","success","showNotification","handleJoinGame","showError","current","value","length","handleInputChange","toggleSingleplayer","replace","c","r","Math","floor","random","toString"],"mappings":"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","sourcesContent":["import './OpenGame.css'\r\nimport '../../../../global-css/switches.css'\r\n\r\nimport { useRef, useState } from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\n\r\nimport { RemoteGame } from '../../../../state/reducers/root'\r\n\r\nimport Server, { ServerResponse } from '../../../../server/server'\r\nimport Alerts from '../../../../components/Alerts/sa-alerts'\r\n\r\nexport default function OpenGame() {\r\n    const navigate = useNavigate()\r\n\r\n    const gameId_input: any = useRef()\r\n    const [singlePlayer, setSinglePlayer] = useState(false)\r\n\r\n    async function handleOpenGame() {\r\n        if (singlePlayer) {\r\n            navigate(`/game/sp-${getRandomGameID()}`)\r\n        }\r\n\r\n        const gameIdValue = validateGameID(true)\r\n        if (gameIdValue == false) {\r\n            return\r\n        }\r\n\r\n        const result: ServerResponse = await Server.createGame(gameIdValue)\r\n\r\n        if (result.success)\r\n            Alerts.showNotification(\"Game Created! You can join now.\")\r\n    }\r\n\r\n    function handleJoinGame() {\r\n        const gameIdValue = validateGameID(true)\r\n        if (gameIdValue == false)\r\n            return\r\n        navigate(`/game/${gameIdValue}`)\r\n    }\r\n\r\n\r\n    function validateGameID(showError: boolean = false): false | string {\r\n        const gameIdValue = gameId_input.current.value\r\n        if (!(gameIdValue.length >= 5 && gameIdValue.length <= 20)) {\r\n            if (showError)\r\n                Alerts.showNotification(\"Invalid Game ID. It must have between 5 and 20 characters\")\r\n            return false\r\n        }\r\n        return gameIdValue\r\n    }\r\n\r\n    function handleInputChange() {\r\n        validateGameID()\r\n    }\r\n\r\n    function toggleSingleplayer() {\r\n        setSinglePlayer(!singlePlayer)\r\n    }\r\n\r\n    return (\r\n        <div className=\"open-game-inner-container\">\r\n            <h3 className=\"header\">Open a Game</h3>\r\n\r\n            <div className=\"entry\">\r\n                <span className=\"key\">Game ID</span>\r\n                <span className=\"value\">\r\n                    <input onChange={handleInputChange} ref={gameId_input} className=\"game-id form-control\" placeholder=\"Game ID\" aria-label=\"Game ID\" aria-describedby=\"basic-addon1\" />\r\n                </span>\r\n            </div>\r\n            <div className=\"entry\">\r\n                <span className=\"key\">Singleplayer</span>\r\n                <span className=\"value\">\r\n                    <label className=\"switch\">\r\n                        <input onClick={toggleSingleplayer} id=\"slider-input\" type=\"checkbox\" />\r\n                        <span className=\"slider round\"></span>\r\n                    </label>\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"entry\">\r\n                <button className=\"open-game-btn\" onClick={handleOpenGame}>\r\n                    CREATE\r\n                </button>\r\n\r\n                <button className=\"open-game-btn\" onClick={handleJoinGame}>\r\n                    JOIN\r\n                </button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nfunction getRandomGameID(): string {\r\n    return 'xxxx-xxxx-xxx-xxxx'.replace(/[x]/g, (c) => {\r\n        const r = Math.floor(Math.random() * 16);\r\n        return r.toString(16);\r\n    });\r\n}"]},"metadata":{},"sourceType":"module"}