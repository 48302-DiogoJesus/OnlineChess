{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\onlinechess\\\\src\\\\pages\\\\Authentication\\\\Login\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport './Login.css';\nimport '../Authentication.css';\nimport '../../../global-css/sweetalert.css';\nimport { useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport State from '../../../state/State';\nimport Server from '../../../server/server';\nimport Alerts from '../../../utils/Alerts/sa-alerts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const username = useRef();\n  const password = useRef();\n  const navigate = useNavigate();\n\n  const handleLogin = async () => {\n    const usernameValue = username.current.value;\n    const passwordValue = password.current.value;\n    if (usernameValue.length === 0 || passwordValue.length === 0) return;\n    const response = await Server.tryLogin(usernameValue, passwordValue);\n\n    if (response.success) {\n      console.log(response);\n      const token = response.data.token;\n      State.login(usernameValue, token);\n      Alerts.showNotification(\"Success!\", 1).then(() => navigate('/'));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"auth-username\",\n          children: \"USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: username,\n          type: \"text\",\n          className: \"auth-input\",\n          id: \"auth-username\",\n          name: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 115\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"auth-password\",\n          children: \"PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: password,\n          type: \"password\",\n          className: \"auth-input\",\n          id: \"auth-password\",\n          name: \"password\",\n          onKeyDown: e => {\n            if (e.key === \"Enter\") handleLogin();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 177\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"auth-button\",\n          value: \"LOGIN\",\n          onClick: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"signup-link\",\n          href: \"/signup\",\n          children: \"Don't have an account yet? Click here.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"6eTpIQ3rHVAMlT0bB68gU6O8k2I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/Authentication/Login/Login.tsx"],"names":["useRef","useNavigate","State","Server","Alerts","Login","props","username","password","navigate","handleLogin","usernameValue","current","value","passwordValue","length","response","tryLogin","success","console","log","token","data","login","showNotification","then","e","key"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAO,uBAAP;AACA,OAAO,oCAAP;AAEA,SAASA,MAAT,QAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,MAAP,MAAmB,iCAAnB;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA2B;AAAA;;AACtC,QAAMC,QAAa,GAAGP,MAAM,EAA5B;AACA,QAAMQ,QAAa,GAAGR,MAAM,EAA5B;AACA,QAAMS,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,WAAW,GAAG,YAAY;AAC5B,UAAMC,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAvC;AACA,UAAMC,aAAa,GAAGN,QAAQ,CAACI,OAAT,CAAiBC,KAAvC;AACA,QAAIF,aAAa,CAACI,MAAd,KAAyB,CAAzB,IAA8BD,aAAa,CAACC,MAAd,KAAyB,CAA3D,EACI;AACJ,UAAMC,QAAQ,GAAG,MAAMb,MAAM,CAACc,QAAP,CAAgBN,aAAhB,EAA+BG,aAA/B,CAAvB;;AACA,QAAIE,QAAQ,CAACE,OAAb,EAAsB;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,YAAMK,KAAK,GAAGL,QAAQ,CAACM,IAAT,CAAcD,KAA5B;AACAnB,MAAAA,KAAK,CAACqB,KAAN,CAAYZ,aAAZ,EAA2BU,KAA3B;AACAjB,MAAAA,MAAM,CAACoB,gBAAP,CAAwB,UAAxB,EAAoC,CAApC,EAAuCC,IAAvC,CAA4C,MAAMhB,QAAQ,CAAC,GAAD,CAA1D;AACH;AACJ,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,GAAG,EAAEF,QAAZ;AAAsB,UAAA,IAAI,EAAC,MAA3B;AAAkC,UAAA,SAAS,EAAC,YAA5C;AAAyD,UAAA,EAAE,EAAC,eAA5D;AAA4E,UAAA,IAAI,EAAC;AAAjF;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAEkG;AAAA;AAAA;AAAA;AAAA,gBAFlG,eAII;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI;AAAO,UAAA,GAAG,EAAEC,QAAZ;AAAsB,UAAA,IAAI,EAAC,UAA3B;AAAsC,UAAA,SAAS,EAAC,YAAhD;AAA6D,UAAA,EAAE,EAAC,eAAhE;AAAgF,UAAA,IAAI,EAAC,UAArF;AAAgG,UAAA,SAAS,EAAEkB,CAAC,IAAI;AAAE,gBAAIA,CAAC,CAACC,GAAF,KAAU,OAAd,EAAuBjB,WAAW;AAAI;AAAxJ;AAAA;AAAA;AAAA;AAAA,gBALJ,eAKgK;AAAA;AAAA;AAAA;AAAA,gBALhK,eAOI;AAAO,UAAA,EAAE,EAAC,aAAV;AAAwB,UAAA,KAAK,EAAC,OAA9B;AAAsC,UAAA,OAAO,EAAEA;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI;AAAG,UAAA,SAAS,EAAC,aAAb;AAA2B,UAAA,IAAI,EAAC,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAnCuBL,K;UAGHJ,W;;;KAHGI,K","sourcesContent":["import './Login.css'\r\nimport '../Authentication.css'\r\nimport '../../../global-css/sweetalert.css'\r\n\r\nimport { useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport State from '../../../state/State'\r\nimport Server from '../../../server/server'\r\n\r\nimport Alerts from '../../../utils/Alerts/sa-alerts'\r\n\r\nexport default function Login(props: any) {\r\n    const username: any = useRef()\r\n    const password: any = useRef()\r\n    const navigate = useNavigate()\r\n\r\n    const handleLogin = async () => {\r\n        const usernameValue = username.current.value\r\n        const passwordValue = password.current.value\r\n        if (usernameValue.length === 0 || passwordValue.length === 0)\r\n            return\r\n        const response = await Server.tryLogin(usernameValue, passwordValue)\r\n        if (response.success) {\r\n            console.log(response)\r\n            const token = response.data.token\r\n            State.login(usernameValue, token)\r\n            Alerts.showNotification(\"Success!\", 1).then(() => navigate('/'))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"global-container\">\r\n            <div className=\"auth-container\">\r\n                <form>\r\n                    <label htmlFor=\"auth-username\">USERNAME</label>\r\n                    <input ref={username} type=\"text\" className=\"auth-input\" id=\"auth-username\" name=\"username\" /><br />\r\n\r\n                    <label htmlFor=\"auth-password\">PASSWORD</label>\r\n                    <input ref={password} type=\"password\" className=\"auth-input\" id=\"auth-password\" name=\"password\" onKeyDown={e => { if (e.key === \"Enter\") handleLogin() }} /><br />\r\n\r\n                    <input id=\"auth-button\" value=\"LOGIN\" onClick={handleLogin} />\r\n                    <a className=\"signup-link\" href=\"/signup\">Don't have an account yet? Click here.</a>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}