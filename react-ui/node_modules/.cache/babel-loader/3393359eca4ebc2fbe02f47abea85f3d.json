{"ast":null,"code":"import { BoardObject } from \"../../../domain/board\";\nimport { PieceColor } from \"../../../domain/piece\";\n\n/** Only compares the 2 boards and opponents*/\nexport const areGameStatesEqual = (game1, game2) => game1.board.toString() === game2.board.toString() && game1.opponent_username == game2.opponent_username;\n\nfunction defaultGameState() {\n  return {\n    board: new BoardObject(),\n    winner: null,\n    local_pieces: PieceColor.WHITE\n  };\n}\n\nconst GameState = {\n  areGameStatesEqual,\n  defaultGameState\n};\nexport default GameState;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/chessbackend/react-ui/src/pages/GamePage/GameState/GameState.ts"],"names":["BoardObject","PieceColor","areGameStatesEqual","game1","game2","board","toString","opponent_username","defaultGameState","winner","local_pieces","WHITE","GameState"],"mappings":"AAAA,SAASA,WAAT,QAA4B,uBAA5B;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AASA;AACA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAoBC,KAApB,KAC9BD,KAAK,CAACE,KAAN,CAAYC,QAAZ,OAA2BF,KAAK,CAACC,KAAN,CAAYC,QAAZ,EAA3B,IACCH,KAAD,CAA0BI,iBAA1B,IAAgDH,KAAD,CAA0BG,iBAFtE;;AAKP,SAASC,gBAAT,GAAwC;AACpC,SAAO;AACHH,IAAAA,KAAK,EAAE,IAAIL,WAAJ,EADJ;AAEHS,IAAAA,MAAM,EAAE,IAFL;AAGHC,IAAAA,YAAY,EAAET,UAAU,CAACU;AAHtB,GAAP;AAKH;;AAED,MAAMC,SAAS,GAAG;AACdV,EAAAA,kBADc;AAEdM,EAAAA;AAFc,CAAlB;AAKA,eAAeI,SAAf","sourcesContent":["import { BoardObject } from \"../../../domain/board\";\r\nimport { PieceColor } from \"../../../domain/piece\";\r\nimport { IMultiplayerGS } from \"./MultiplayerGS\";\r\n\r\nexport interface IGameState {\r\n    board: BoardObject,\r\n    winner: PieceColor | null,\r\n    local_pieces: PieceColor,\r\n}\r\n\r\n/** Only compares the 2 boards and opponents*/\r\nexport const areGameStatesEqual = (game1: IGameState, game2: IGameState): boolean =>\r\n    game1.board.toString() === game2.board.toString() &&\r\n    (game1 as IMultiplayerGS).opponent_username == (game2 as IMultiplayerGS).opponent_username\r\n\r\n\r\nfunction defaultGameState(): IGameState {\r\n    return {\r\n        board: new BoardObject(),\r\n        winner: null,\r\n        local_pieces: PieceColor.WHITE\r\n    }\r\n}\r\n\r\nconst GameState = {\r\n    areGameStatesEqual,\r\n    defaultGameState\r\n}\r\n\r\nexport default GameState"]},"metadata":{},"sourceType":"module"}