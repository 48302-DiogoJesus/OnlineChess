{"ast":null,"code":"export default String.prototype.toBoard = () => {\n  const boardAsString = String(this);\n  if (boardAsString.length < BOARD_WIDTH * BOARD_HEIGHT) return null;\n  const newBoard = new BoardObject();\n\n  for (let row = 0, currChar = 0; row < BOARD_HEIGHT; row++) {\n    for (let col = 0; col < BOARD_WIDTH; col++, currChar++) {\n      const pieceChar = boardAsString[currChar];\n      const piece = charToPiece(pieceChar); // [piece] will be null if char does not correspond to a piece. Case of the \" \" representing an empty Tile\n\n      newBoard.setPieceAt(Position(col, row), piece);\n    }\n  }\n\n  return newBoard;\n};","map":{"version":3,"sources":["C:/Users/jesus/Desktop/TS/OnlineChess/onlinechess/src/domain/stringToBoard.js"],"names":["String","prototype","toBoard","boardAsString","length","BOARD_WIDTH","BOARD_HEIGHT","newBoard","BoardObject","row","currChar","col","pieceChar","piece","charToPiece","setPieceAt","Position"],"mappings":"AAAA,eAAeA,MAAM,CAACC,SAAP,CAAiBC,OAAjB,GAA2B,MAAM;AAC5C,QAAMC,aAAa,GAAGH,MAAM,CAAC,IAAD,CAA5B;AACA,MAAIG,aAAa,CAACC,MAAd,GAAuBC,WAAW,GAAGC,YAAzC,EACE,OAAO,IAAP;AACF,QAAMC,QAAQ,GAAG,IAAIC,WAAJ,EAAjB;;AACA,OAAK,IAAIC,GAAG,GAAG,CAAV,EAAaC,QAAQ,GAAG,CAA7B,EAAgCD,GAAG,GAAGH,YAAtC,EAAoDG,GAAG,EAAvD,EAA2D;AACzD,SAAK,IAAIE,GAAG,GAAG,CAAf,EAAkBA,GAAG,GAAGN,WAAxB,EAAqCM,GAAG,IAAID,QAAQ,EAApD,EAAwD;AACtD,YAAME,SAAS,GAAGT,aAAa,CAACO,QAAD,CAA/B;AACE,YAAMG,KAAK,GAAGC,WAAW,CAACF,SAAD,CAAzB,CAFoD,CAGpD;;AACAL,MAAAA,QAAQ,CAACQ,UAAT,CAAoBC,QAAQ,CAACL,GAAD,EAAMF,GAAN,CAA5B,EAAwCI,KAAxC;AACH;AACF;;AACD,SAAON,QAAP;AACD,CAdH","sourcesContent":["export default String.prototype.toBoard = () => {\r\n    const boardAsString = String(this)\r\n    if (boardAsString.length < BOARD_WIDTH * BOARD_HEIGHT)\r\n      return null\r\n    const newBoard = new BoardObject()\r\n    for (let row = 0, currChar = 0; row < BOARD_HEIGHT; row++) {\r\n      for (let col = 0; col < BOARD_WIDTH; col++, currChar++) {\r\n        const pieceChar = boardAsString[currChar]\r\n          const piece = charToPiece(pieceChar)\r\n          // [piece] will be null if char does not correspond to a piece. Case of the \" \" representing an empty Tile\r\n          newBoard.setPieceAt(Position(col, row), piece)\r\n      }\r\n    }\r\n    return newBoard\r\n  }"]},"metadata":{},"sourceType":"module"}