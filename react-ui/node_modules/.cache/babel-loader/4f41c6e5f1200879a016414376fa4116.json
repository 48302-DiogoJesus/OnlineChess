{"ast":null,"code":"import Actions from './actions/action';\nimport { store as Store } from '../index';\nimport Server from '../server/server';\nexport function GetAppState() {\n  return Store.getState();\n}\n_c = GetAppState;\nexport function joinGame(game_id\n/*callback: (success: boolean, game: RemoteGame | null, original_response: ServerResponse) => void*/\n) {\n  // Since we are joining a new game \n  Store.dispatch(Actions.leaveGame());\n  return new Promise((resolve, reject) => {\n    Store.dispatch(function (dispatch, getState) {\n      Server.getGame(game_id).then(response => {\n        // Game Exists\n        if (response.success) {\n          const gameObject = response.data;\n          dispatch(Actions.joinGame(gameObject));\n        }\n\n        resolve(response);\n      });\n    });\n  });\n}\nexport function login(username) {\n  Store.dispatch(Actions.doLogin(username));\n}\nexport function logout() {\n  Store.dispatch(Actions.clearState());\n}\nexport function leaveGame() {\n  console.log(\"WHOTF\");\n  Store.dispatch(Actions.leaveGame());\n}\nexport function clearState() {\n  Store.dispatch(Actions.clearState());\n}\nconst State = {\n  GetAppState,\n  joinGame,\n  login,\n  logout,\n  leaveGame\n};\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAppState\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/state/State.ts"],"names":["Actions","store","Store","Server","GetAppState","getState","joinGame","game_id","dispatch","leaveGame","Promise","resolve","reject","getGame","then","response","success","gameObject","data","login","username","doLogin","logout","clearState","console","log","State"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAK,IAAIC,KAAlB,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAuC,kBAAvC;AAGA,OAAO,SAASC,WAAT,GAAiC;AACpC,SAAOF,KAAK,CAACG,QAAN,EAAP;AACH;KAFeD,W;AAIhB,OAAO,SAASE,QAAT,CACHC;AACA;AAFG,EAGoB;AACvB;AACAL,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACS,SAAR,EAAf;AAEA,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCV,IAAAA,KAAK,CAACM,QAAN,CAAe,UAAUA,QAAV,EAAyBH,QAAzB,EAAwC;AACnDF,MAAAA,MAAM,CAACU,OAAP,CAAeN,OAAf,EACKO,IADL,CACWC,QAAD,IAA8B;AAChC;AACA,YAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClB,gBAAMC,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AACAV,UAAAA,QAAQ,CAACR,OAAO,CAACM,QAAR,CAAiBW,UAAjB,CAAD,CAAR;AACH;;AACDN,QAAAA,OAAO,CAACI,QAAD,CAAP;AACH,OARL;AASH,KAVD;AAWH,GAZM,CAAP;AAaH;AAED,OAAO,SAASI,KAAT,CAAeC,QAAf,EAAiC;AACpClB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACqB,OAAR,CAAgBD,QAAhB,CAAf;AACH;AAED,OAAO,SAASE,MAAT,GAAkB;AACrBpB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACuB,UAAR,EAAf;AACH;AAED,OAAO,SAASd,SAAT,GAAqB;AACxBe,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAvB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACS,SAAR,EAAf;AACH;AAED,OAAO,SAASc,UAAT,GAAsB;AACzBrB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACuB,UAAR,EAAf;AACH;AAED,MAAMG,KAAK,GAAG;AACVtB,EAAAA,WADU;AAEVE,EAAAA,QAFU;AAGVa,EAAAA,KAHU;AAIVG,EAAAA,MAJU;AAKVb,EAAAA;AALU,CAAd;AAQA,eAAeiB,KAAf","sourcesContent":["import Actions from './actions/action'\r\nimport { store as Store } from '../index'\r\nimport Server, { ServerResponse } from '../server/server'\r\nimport { AppState, RemoteGame } from './reducers/root'\r\n\r\nexport function GetAppState(): AppState {\r\n    return Store.getState()\r\n}\r\n\r\nexport function joinGame(\r\n    game_id: string,\r\n    /*callback: (success: boolean, game: RemoteGame | null, original_response: ServerResponse) => void*/\r\n): Promise<ServerResponse> {\r\n    // Since we are joining a new game \r\n    Store.dispatch(Actions.leaveGame())\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Store.dispatch(function (dispatch: any, getState: any) {\r\n            Server.getGame(game_id)\r\n                .then((response: ServerResponse) => {\r\n                    // Game Exists\r\n                    if (response.success) {\r\n                        const gameObject = response.data as RemoteGame\r\n                        dispatch(Actions.joinGame(gameObject))\r\n                    }\r\n                    resolve(response)\r\n                })\r\n        })\r\n    })\r\n}\r\n\r\nexport function login(username: string) {\r\n    Store.dispatch(Actions.doLogin(username))\r\n}\r\n\r\nexport function logout() {\r\n    Store.dispatch(Actions.clearState())\r\n}\r\n\r\nexport function leaveGame() {\r\n    console.log(\"WHOTF\")\r\n    Store.dispatch(Actions.leaveGame())\r\n}\r\n\r\nexport function clearState() {\r\n    Store.dispatch(Actions.clearState())\r\n}\r\n\r\nconst State = {\r\n    GetAppState,\r\n    joinGame,\r\n    login,\r\n    logout,\r\n    leaveGame\r\n}\r\n\r\nexport default State"]},"metadata":{},"sourceType":"module"}