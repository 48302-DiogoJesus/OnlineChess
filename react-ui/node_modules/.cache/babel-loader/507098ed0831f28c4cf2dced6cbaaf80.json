{"ast":null,"code":"import { NotificationManager } from 'react-notifications';\n\nconst createNotification = function (type, message) {\n  let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4000;\n  return () => {\n    switch (type) {\n      case 'info':\n        NotificationManager.info(message, title, duration);\n        break;\n\n      case 'success':\n        NotificationManager.success(message, title, duration);\n        break;\n\n      case 'warning':\n        NotificationManager.warning(message, title, duration);\n        break;\n\n      case 'error':\n        NotificationManager.error(message, title, duration, () => {// IGNORE: USE LATER IF NEEDED\n        });\n        break;\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/javascript-utils/growl-notifications.js"],"names":["NotificationManager","createNotification","type","message","title","duration","info","success","warning","error"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;;AAEA,MAAMC,kBAAkB,GAAG,UAACC,IAAD,EAAOC,OAAP,EAAgD;AAAA,MAAhCC,KAAgC,uEAAxB,EAAwB;AAAA,MAApBC,QAAoB,uEAAT,IAAS;AACvE,SAAO,MAAM;AACT,YAAQH,IAAR;AACI,WAAK,MAAL;AACIF,QAAAA,mBAAmB,CAACM,IAApB,CAAyBH,OAAzB,EAAkCC,KAAlC,EAAyCC,QAAzC;AACA;;AACJ,WAAK,SAAL;AACIL,QAAAA,mBAAmB,CAACO,OAApB,CAA4BJ,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACJ,WAAK,SAAL;AACIL,QAAAA,mBAAmB,CAACQ,OAApB,CAA4BL,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACJ,WAAK,OAAL;AACIL,QAAAA,mBAAmB,CAACS,KAApB,CAA0BN,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD,MAAM,CACtD;AACH,SAFD;AAGA;AAdR;AAgBH,GAjBD;AAkBH,CAnBD","sourcesContent":["import { NotificationManager } from 'react-notifications';\r\n\r\nconst createNotification = (type, message, title = \"\", duration = 4000) => {\r\n    return () => {\r\n        switch (type) {\r\n            case 'info':\r\n                NotificationManager.info(message, title, duration);\r\n                break;\r\n            case 'success':\r\n                NotificationManager.success(message, title, duration);\r\n                break;\r\n            case 'warning':\r\n                NotificationManager.warning(message, title, duration);\r\n                break;\r\n            case 'error':\r\n                NotificationManager.error(message, title, duration, () => {\r\n                    // IGNORE: USE LATER IF NEEDED\r\n                });\r\n                break;\r\n        }\r\n    };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}