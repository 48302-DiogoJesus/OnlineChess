{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\onlinechess\\\\src\\\\pages\\\\MainPage\\\\MainPage.tsx\",\n    _s = $RefreshSig$();\n\nimport './MainPage.css';\nimport { useSelector } from 'react-redux';\nimport Navbar from './inner/Navbar/Navbar';\nimport OpenGame from './inner/OpenGame/OpenGame'; // import createNotification from '../../javascript-utils/growl-notifications'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NotificationManager = require('react-notifications');\n\nexport default function MainPage(props) {\n  _s();\n\n  const createNotification = function (type, message) {\n    let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n    let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4000;\n    return () => {\n      switch (type) {\n        case 'info':\n          NotificationManager.info(message, title, duration);\n          break;\n\n        case 'success':\n          NotificationManager.success(message, title, duration);\n          break;\n\n        case 'warning':\n          NotificationManager.warning(message, title, duration);\n          break;\n\n        case 'error':\n          NotificationManager.error(message, title, duration, 5000);\n          break;\n      }\n    };\n  };\n\n  const username = useSelector(state => state).authentication.username;\n  /*\r\n  function renderLoginIfNotLogged() {\r\n    if (username == null)\r\n      return <Navigate to=\"/login\" replace />\r\n  }\r\n    Inside Return Div Container: {renderLoginIfNotLogged()}\r\n  */\n\n  function handle() {\n    console.log(\"TESTING THIS SHIT\");\n    console.log(createNotification(\"info\", \"HI\"));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container main-page-contents\",\n      onClick: handle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row justify-content-md-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col open-game-outer-container\",\n          children: /*#__PURE__*/_jsxDEV(OpenGame, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainPage, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/MainPage/MainPage.tsx"],"names":["useSelector","Navbar","OpenGame","NotificationManager","require","MainPage","props","createNotification","type","message","title","duration","info","success","warning","error","username","state","authentication","handle","console","log"],"mappings":";;;AAAA,OAAO,gBAAP;AAEA,SAASA,WAAT,QAA4B,aAA5B;AAIA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB,C,CACA;;;;AAEA,MAAMC,mBAAmB,GAAGC,OAAO,CAAC,qBAAD,CAAnC;;AAGA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAAA;;AAE3C,QAAMC,kBAAkB,GAAG,UAACC,IAAD,EAAeC,OAAf,EAAgE;AAAA,QAAhCC,KAAgC,uEAAxB,EAAwB;AAAA,QAApBC,QAAoB,uEAAT,IAAS;AACzF,WAAO,MAAM;AACX,cAAQH,IAAR;AACE,aAAK,MAAL;AACEL,UAAAA,mBAAmB,CAACS,IAApB,CAAyBH,OAAzB,EAAkCC,KAAlC,EAAyCC,QAAzC;AACA;;AACF,aAAK,SAAL;AACER,UAAAA,mBAAmB,CAACU,OAApB,CAA4BJ,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACF,aAAK,SAAL;AACER,UAAAA,mBAAmB,CAACW,OAApB,CAA4BL,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACF,aAAK,OAAL;AACER,UAAAA,mBAAmB,CAACY,KAApB,CAA0BN,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD,IAApD;AACA;AAZJ;AAcD,KAfD;AAgBD,GAjBD;;AAmBA,QAAMK,QAAuB,GAAGhB,WAAW,CAAEiB,KAAD,IAAqBA,KAAtB,CAAX,CAAwCC,cAAxC,CAAuDF,QAAvF;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;;AAGE,WAASG,MAAT,GAAkB;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYd,kBAAkB,CAAC,MAAD,EAAS,IAAT,CAA9B;AACD;;AAED,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,8BAAf;AAA8C,MAAA,OAAO,EAAEY,MAAvD;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,+BAAf;AAAA,iCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAjDuBd,Q;UAqBUL,W;;;KArBVK,Q","sourcesContent":["import './MainPage.css';\r\nimport { Link, Navigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../../state/reducers/root'\r\nimport { useEffect } from 'react';\r\n\r\nimport Navbar from './inner/Navbar/Navbar'\r\nimport OpenGame from './inner/OpenGame/OpenGame'\r\n// import createNotification from '../../javascript-utils/growl-notifications'\r\n\r\nconst NotificationManager = require('react-notifications');\r\n\r\n\r\nexport default function MainPage(props: any) {\r\n\r\n  const createNotification = (type: string, message: string, title = \"\", duration = 4000) => {\r\n    return () => {\r\n      switch (type) {\r\n        case 'info':\r\n          NotificationManager.info(message, title, duration);\r\n          break;\r\n        case 'success':\r\n          NotificationManager.success(message, title, duration);\r\n          break;\r\n        case 'warning':\r\n          NotificationManager.warning(message, title, duration);\r\n          break;\r\n        case 'error':\r\n          NotificationManager.error(message, title, duration, 5000);\r\n          break;\r\n      }\r\n    };\r\n  };\r\n\r\n  const username: string | null = useSelector((state: AppState) => state).authentication.username\r\n\r\n  /*\r\n  function renderLoginIfNotLogged() {\r\n    if (username == null)\r\n      return <Navigate to=\"/login\" replace />\r\n  }\r\n\r\n  Inside Return Div Container: {renderLoginIfNotLogged()}\r\n  */\r\n\r\n  function handle() {\r\n    console.log(\"TESTING THIS SHIT\")\r\n    console.log(createNotification(\"info\", \"HI\"))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <div className=\"container main-page-contents\" onClick={handle}>\r\n        <div className=\"row justify-content-md-center\">\r\n          <div className=\"col open-game-outer-container\">\r\n            <OpenGame />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}