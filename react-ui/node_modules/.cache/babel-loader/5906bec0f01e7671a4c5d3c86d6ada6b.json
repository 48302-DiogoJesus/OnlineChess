{"ast":null,"code":"import Actions from './actions/action';\nimport { store as Store } from '../index';\nexport function GetAppState() {\n  return Store.getState();\n}\n/* export function joinGame(\r\n    game_id: string,\r\n    // callback: (success: boolean, game: RemoteGame | null, original_response: ServerResponse) => void\r\n): Promise<ServerResponse> {\r\n    // Since we are joining a new game \r\n    Store.dispatch(Actions.leaveGame())\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Store.dispatch(function (dispatch: any, getState: any) {\r\n            Server.getGame(game_id)\r\n                .then((response: ServerResponse) => {\r\n                    // Game Exists\r\n                    if (response.success) {\r\n                        const gameObject = response.data as RemoteGame\r\n                        dispatch(Actions.joinGame(gameObject))\r\n                    }\r\n                    resolve(response)\r\n                })\r\n        })\r\n    })\r\n} */\n\n_c = GetAppState;\nexport function login(username) {\n  Store.dispatch(Actions.doLogin(username));\n}\nexport function logout() {\n  Store.dispatch(Actions.clearState());\n}\nexport function leaveGame() {\n  Store.dispatch(Actions.leaveGame());\n}\nexport function clearState() {\n  Store.dispatch(Actions.clearState());\n}\nconst State = {\n  GetAppState,\n  joinGame,\n  login,\n  logout,\n  leaveGame\n};\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAppState\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/state/State.ts"],"names":["Actions","store","Store","GetAppState","getState","login","username","dispatch","doLogin","logout","clearState","leaveGame","State","joinGame"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAK,IAAIC,KAAlB,QAA+B,UAA/B;AAIA,OAAO,SAASC,WAAT,GAAiC;AACpC,SAAOD,KAAK,CAACE,QAAN,EAAP;AACH;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KAxBgBD,W;AA0BhB,OAAO,SAASE,KAAT,CAAeC,QAAf,EAAiC;AACpCJ,EAAAA,KAAK,CAACK,QAAN,CAAeP,OAAO,CAACQ,OAAR,CAAgBF,QAAhB,CAAf;AACH;AAED,OAAO,SAASG,MAAT,GAAkB;AACrBP,EAAAA,KAAK,CAACK,QAAN,CAAeP,OAAO,CAACU,UAAR,EAAf;AACH;AAED,OAAO,SAASC,SAAT,GAAqB;AACxBT,EAAAA,KAAK,CAACK,QAAN,CAAeP,OAAO,CAACW,SAAR,EAAf;AACH;AAED,OAAO,SAASD,UAAT,GAAsB;AACzBR,EAAAA,KAAK,CAACK,QAAN,CAAeP,OAAO,CAACU,UAAR,EAAf;AACH;AAED,MAAME,KAAK,GAAG;AACVT,EAAAA,WADU;AAEVU,EAAAA,QAFU;AAGVR,EAAAA,KAHU;AAIVI,EAAAA,MAJU;AAKVE,EAAAA;AALU,CAAd;AAQA,eAAeC,KAAf","sourcesContent":["import Actions from './actions/action'\r\nimport { store as Store } from '../index'\r\nimport Server, { RemoteGame, ServerResponse } from '../server/server'\r\nimport { AppState } from './reducers/root'\r\n\r\nexport function GetAppState(): AppState {\r\n    return Store.getState()\r\n}\r\n\r\n/* export function joinGame(\r\n    game_id: string,\r\n    // callback: (success: boolean, game: RemoteGame | null, original_response: ServerResponse) => void\r\n): Promise<ServerResponse> {\r\n    // Since we are joining a new game \r\n    Store.dispatch(Actions.leaveGame())\r\n\r\n    return new Promise((resolve, reject) => {\r\n        Store.dispatch(function (dispatch: any, getState: any) {\r\n            Server.getGame(game_id)\r\n                .then((response: ServerResponse) => {\r\n                    // Game Exists\r\n                    if (response.success) {\r\n                        const gameObject = response.data as RemoteGame\r\n                        dispatch(Actions.joinGame(gameObject))\r\n                    }\r\n                    resolve(response)\r\n                })\r\n        })\r\n    })\r\n} */\r\n\r\nexport function login(username: string) {\r\n    Store.dispatch(Actions.doLogin(username))\r\n}\r\n\r\nexport function logout() {\r\n    Store.dispatch(Actions.clearState())\r\n}\r\n\r\nexport function leaveGame() {\r\n    Store.dispatch(Actions.leaveGame())\r\n}\r\n\r\nexport function clearState() {\r\n    Store.dispatch(Actions.clearState())\r\n}\r\n\r\nconst State = {\r\n    GetAppState,\r\n    joinGame,\r\n    login,\r\n    logout,\r\n    leaveGame\r\n}\r\n\r\nexport default State"]},"metadata":{},"sourceType":"module"}