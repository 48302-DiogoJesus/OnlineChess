{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport CONFIG from '../../server/config';\nimport { doLogin } from '../../state/actions/action';\nimport { useDispatch } from 'react-redux';\nexport async function AttemptLogin(username, password) {\n  _s();\n\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\n    'username': username,\n    'password': password\n  });\n\n  if (loginResponse.status === 200) {\n    const dispatch = useDispatch();\n    dispatch(doLogin(username));\n    return true;\n  } else return loginResponse.data.error;\n}\n\n_s(AttemptLogin, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AttemptLogin;\nexport async function attemptSignup(username, password) {\n  _s2();\n\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\n    'username': username,\n    'password': password\n  });\n\n  if (loginResponse.status === 201) {\n    const dispatch = useDispatch();\n    dispatch(doLogin(username));\n    return true;\n  } else return loginResponse.data.error;\n}\n\n_s2(attemptSignup, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"AttemptLogin\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/Authentication/Authentication.ts"],"names":["CONFIG","doLogin","useDispatch","AttemptLogin","username","password","loginResponse","AXIOSINSTANCE","post","status","dispatch","data","error","attemptSignup"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAO,eAAeC,YAAf,CAA4BC,QAA5B,EAA8CC,QAA9C,EAAgE;AAAA;;AACnE,QAAMC,aAAa,GAAG,MAAMN,MAAM,CAACO,aAAP,CAAqBC,IAArB,CAA0B,OAA1B,EAAmC;AAC3D,gBAAYJ,QAD+C;AAE3D,gBAAYC;AAF+C,GAAnC,CAA5B;;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EAAkC;AAC9B,UAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAQ,IAAAA,QAAQ,CAACT,OAAO,CAACG,QAAD,CAAR,CAAR;AACA,WAAO,IAAP;AACH,GAJD,MAMI,OAAOE,aAAa,CAACK,IAAd,CAAmBC,KAA1B;AACP;;GAZqBT,Y;UAMGD,W;;;KANHC,Y;AActB,OAAO,eAAeU,aAAf,CAA6BT,QAA7B,EAA+CC,QAA/C,EAAiE;AAAA;;AACpE,QAAMC,aAAa,GAAG,MAAMN,MAAM,CAACO,aAAP,CAAqBC,IAArB,CAA0B,QAA1B,EAAoC;AAC5D,gBAAYJ,QADgD;AAE5D,gBAAYC;AAFgD,GAApC,CAA5B;;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EAAkC;AAC9B,UAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACAQ,IAAAA,QAAQ,CAACT,OAAO,CAACG,QAAD,CAAR,CAAR;AACA,WAAO,IAAP;AACH,GAJD,MAMI,OAAOE,aAAa,CAACK,IAAd,CAAmBC,KAA1B;AACP;;IAZqBC,a;UAMGX,W","sourcesContent":["import CONFIG from '../../server/config'\r\n\r\nimport { doLogin } from '../../state/actions/action'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useEffect } from 'react';\r\n\r\nexport async function AttemptLogin(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 200) {\r\n        const dispatch = useDispatch()\r\n        dispatch(doLogin(username))\r\n        return true\r\n    }\r\n    else \r\n        return loginResponse.data.error \r\n}\r\n\r\nexport async function attemptSignup(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 201) {\r\n        const dispatch = useDispatch()\r\n        dispatch(doLogin(username))\r\n        return true\r\n    }\r\n    else \r\n        return loginResponse.data.error \r\n}"]},"metadata":{},"sourceType":"module"}