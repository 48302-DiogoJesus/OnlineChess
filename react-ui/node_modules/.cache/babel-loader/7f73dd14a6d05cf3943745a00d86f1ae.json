{"ast":null,"code":"import Actions from './actions/action';\nimport { store, store as Store } from '../index';\nimport Server from '../server/server';\nexport function GetAppState() {\n  return store.getState();\n}\n_c = GetAppState;\nexport function joinGame(game_id) {\n  return function (dispatch, getState) {\n    Server.getGame(game_id).then(response => {\n      // Game Exists\n      if (response.success) {\n        const gameObject = response.data;\n        dispatch(Actions.joinGame(gameObject));\n      }\n    });\n  };\n}\nexport function login(username) {\n  Store.dispatch(Actions.doLogin(username));\n}\nexport function logout() {\n  Store.dispatch(Actions.doLogout());\n}\nexport function leaveGame() {\n  Store.dispatch(Actions.leaveGame());\n}\nconst State = {\n  GetAppState,\n  joinGame,\n  login,\n  logout,\n  leaveGame\n};\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAppState\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/state/State.ts"],"names":["Actions","store","Store","Server","GetAppState","getState","joinGame","game_id","dispatch","getGame","then","response","success","gameObject","data","login","username","doLogin","logout","doLogout","leaveGame","State"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAT,EAAgBA,KAAK,IAAIC,KAAzB,QAAsC,UAAtC;AACA,OAAOC,MAAP,MAAuC,kBAAvC;AAIA,OAAO,SAASC,WAAT,GAAiC;AACpC,SAAOH,KAAK,CAACI,QAAN,EAAP;AACH;KAFeD,W;AAIhB,OAAO,SAASE,QAAT,CAAkBC,OAAlB,EAAmC;AACtC,SAAO,UAAUC,QAAV,EAAyBH,QAAzB,EAAwC;AAC3CF,IAAAA,MAAM,CAACM,OAAP,CAAeF,OAAf,EACKG,IADL,CACWC,QAAD,IAA8B;AAChC;AACA,UAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClB,cAAMC,UAAU,GAAGF,QAAQ,CAACG,IAA5B;AACAN,QAAAA,QAAQ,CAACR,OAAO,CAACM,QAAR,CAAiBO,UAAjB,CAAD,CAAR;AACH;AACJ,KAPL;AAQH,GATD;AAUH;AAED,OAAO,SAASE,KAAT,CAAeC,QAAf,EAAiC;AACpCd,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACiB,OAAR,CAAgBD,QAAhB,CAAf;AACH;AAED,OAAO,SAASE,MAAT,GAAkB;AACrBhB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACmB,QAAR,EAAf;AACH;AAED,OAAO,SAASC,SAAT,GAAqB;AACxBlB,EAAAA,KAAK,CAACM,QAAN,CAAeR,OAAO,CAACoB,SAAR,EAAf;AACH;AAED,MAAMC,KAAK,GAAG;AACVjB,EAAAA,WADU;AAEVE,EAAAA,QAFU;AAGVS,EAAAA,KAHU;AAIVG,EAAAA,MAJU;AAKVE,EAAAA;AALU,CAAd;AAQA,eAAeC,KAAf","sourcesContent":["import Actions from './actions/action'\r\nimport { store, store as Store } from '../index'\r\nimport Server, { ServerResponse } from '../server/server'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState, Game } from './reducers/root'\r\n\r\nexport function GetAppState(): AppState {\r\n    return store.getState()\r\n}\r\n\r\nexport function joinGame(game_id: string) {\r\n    return function (dispatch: any, getState: any) {\r\n        Server.getGame(game_id)\r\n            .then((response: ServerResponse) => {\r\n                // Game Exists\r\n                if (response.success) {\r\n                    const gameObject = response.data as Game\r\n                    dispatch(Actions.joinGame(gameObject))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function login(username: string) {\r\n    Store.dispatch(Actions.doLogin(username))\r\n}\r\n\r\nexport function logout() {\r\n    Store.dispatch(Actions.doLogout())\r\n}\r\n\r\nexport function leaveGame() {\r\n    Store.dispatch(Actions.leaveGame())\r\n}\r\n\r\nconst State = {\r\n    GetAppState,\r\n    joinGame,\r\n    login,\r\n    logout,\r\n    leaveGame\r\n}\r\n\r\nexport default State"]},"metadata":{},"sourceType":"module"}