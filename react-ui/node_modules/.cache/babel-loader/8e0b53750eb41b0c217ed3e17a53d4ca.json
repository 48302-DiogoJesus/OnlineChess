{"ast":null,"code":"import'./tile.css';import Piece from'../Piece/Piece';import{jsx as _jsx}from\"react/jsx-runtime\";export var TileColor;(function(TileColor){TileColor[TileColor[\"DARK\"]=0]=\"DARK\";TileColor[TileColor[\"LIGHT\"]=1]=\"LIGHT\";})(TileColor||(TileColor={}));export default function Tile(props){var calcTileBackground=function calcTileBackground(){if(props.selected)return'tile selected';if(props.target)return'tile target';if(props.color===TileColor.DARK)return'tile dark';else if(props.color===TileColor.LIGHT)return'tile light';};return/*#__PURE__*/_jsx(\"div\",{className:calcTileBackground(),onClick:props.onTileClick,children:props.piece===null?null:/*#__PURE__*/_jsx(Piece,{piece:props.piece})});}","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/chessbackend/react-ui/src/pages/GamePage/components/ChessBoard/Tile/Tile.tsx"],"names":["Piece","TileColor","Tile","props","calcTileBackground","selected","target","color","DARK","LIGHT","onTileClick","piece"],"mappings":"AAAA,MAAO,YAAP,CAEA,MAAOA,CAAAA,KAAP,KAAkB,gBAAlB,C,2CAGA,UAAYC,CAAAA,SAAZ,C,UAAYA,S,EAAAA,S,CAAAA,S,mBAAAA,S,CAAAA,S,wBAAAA,S,GAAAA,S,MAEZ,cAAe,SAASC,CAAAA,IAAT,CACbC,KADa,CAQV,CAEH,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CAC/B,GAAID,KAAK,CAACE,QAAV,CACE,MAAO,eAAP,CAEF,GAAIF,KAAK,CAACG,MAAV,CACE,MAAO,aAAP,CAEF,GAAIH,KAAK,CAACI,KAAN,GAAgBN,SAAS,CAACO,IAA9B,CACE,MAAO,WAAP,CADF,IAEK,IAAIL,KAAK,CAACI,KAAN,GAAgBN,SAAS,CAACQ,KAA9B,CACH,MAAO,YAAP,CAEH,CAZD,CAcA,mBACE,YAAK,SAAS,CAAEL,kBAAkB,EAAlC,CAAsC,OAAO,CAAED,KAAK,CAACO,WAArD,UAEIP,KAAK,CAACQ,KAAN,GAAgB,IAAhB,CAEE,IAFF,cAIE,KAAC,KAAD,EAAO,KAAK,CAAER,KAAK,CAACQ,KAApB,EANN,EADF,CAWD","sourcesContent":["import './tile.css'\r\nimport { Piece as PieceObject } from '../../../../../domain/piece';\r\nimport Piece from '../Piece/Piece'\r\nimport { PositionObject } from '../../../../../domain/position';\r\n\r\nexport enum TileColor { DARK, LIGHT }\r\n\r\nexport default function Tile(\r\n  props: {\r\n    selected: boolean,\r\n    target: boolean,\r\n    position: PositionObject,\r\n    color: TileColor,\r\n    piece: PieceObject | null,\r\n    onTileClick: () => void,\r\n  }) {\r\n\r\n  const calcTileBackground = () => {\r\n    if (props.selected)\r\n      return 'tile selected'\r\n\r\n    if (props.target)\r\n      return 'tile target'\r\n\r\n    if (props.color === TileColor.DARK)\r\n      return 'tile dark'\r\n    else if (props.color === TileColor.LIGHT)\r\n      return 'tile light'\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={calcTileBackground()} onClick={props.onTileClick}>\r\n      {\r\n        props.piece === null\r\n          ?\r\n          null\r\n          :\r\n          <Piece piece={props.piece} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}