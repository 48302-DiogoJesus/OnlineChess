{"ast":null,"code":"import _createForOfIteratorHelper from\"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\onlinechess\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\createForOfIteratorHelper.js\";import swal from'sweetalert';export function showMessage(title,message){var buttons=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[false,true];var buttonEvents=arguments.length>3&&arguments[3]!==undefined?arguments[3]:null;var sw=swal({title:title,text:message,buttons:buttons});if(buttonEvents!=null){var _iterator=_createForOfIteratorHelper(buttonEvents),_step;try{var _loop=function _loop(){var _document$querySelect;var buttonEvent=_step.value;(_document$querySelect=document.querySelector(\".\".concat(buttonEvent.className)))===null||_document$querySelect===void 0?void 0:_document$querySelect.addEventListener(buttonEvent.eventName,function(e){return buttonEvent.execute(e);});};for(_iterator.s();!(_step=_iterator.n()).done;){_loop();}}catch(err){_iterator.e(err);}finally{_iterator.f();}}return sw;}export function showNotification(message){var duration_s=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2.3;return swal(message,{buttons:[false,false],timer:duration_s*1000});}var Alerts={showMessage:showMessage,showNotification:showNotification};export default Alerts;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/utils/Alerts/sa-alerts.ts"],"names":["swal","showMessage","title","message","buttons","buttonEvents","sw","text","buttonEvent","document","querySelector","className","addEventListener","eventName","e","execute","showNotification","duration_s","timer","Alerts"],"mappings":"gMAAA,MAAOA,CAAAA,IAAP,KAAiB,YAAjB,CASA,MAAO,SAASC,CAAAA,WAAT,CACHC,KADG,CAEHC,OAFG,CAKL,IAFEC,CAAAA,OAEF,2DAF+C,CAAC,KAAD,CAAQ,IAAR,CAE/C,IADEC,CAAAA,YACF,2DADuC,IACvC,CACE,GAAMC,CAAAA,EAAE,CAAGN,IAAI,CAAC,CACZE,KAAK,CAAEA,KADK,CAEZK,IAAI,CAAEJ,OAFM,CAGZC,OAAO,CAAEA,OAHG,CAAD,CAAf,CAKA,GAAIC,YAAY,EAAI,IAApB,CAA0B,0CACIA,YADJ,oEACXG,CAAAA,WADW,aAElB,uBAAAC,QAAQ,CAACC,aAAT,YAA2BF,WAAW,CAACG,SAAvC,wEAAqDC,gBAArD,CAAsEJ,WAAW,CAACK,SAAlF,CAA6F,SAACC,CAAD,QAAON,CAAAA,WAAW,CAACO,OAAZ,CAAoBD,CAApB,CAAP,EAA7F,EAFkB,EACtB,+CAAwC,SAEvC,CAHqB,qDAIzB,CAED,MAAOR,CAAAA,EAAP,CACH,CAED,MAAO,SAASU,CAAAA,gBAAT,CAA0Bb,OAA1B,CAAqE,IAA1Bc,CAAAA,UAA0B,2DAAL,GAAK,CACxE,MAAOjB,CAAAA,IAAI,CAACG,OAAD,CAAU,CACjBC,OAAO,CAAE,CAAC,KAAD,CAAQ,KAAR,CADQ,CAEjBc,KAAK,CAAED,UAAU,CAAG,IAFH,CAAV,CAAX,CAIH,CAED,GAAME,CAAAA,MAAM,CAAG,CACXlB,WAAW,CAAXA,WADW,CAEXe,gBAAgB,CAAhBA,gBAFW,CAAf,CAKA,cAAeG,CAAAA,MAAf","sourcesContent":["import swal from 'sweetalert'\r\nimport { ButtonList } from 'sweetalert/typings/modules/options/buttons'\r\n\r\ninterface ButtonEvent {\r\n    className: string,\r\n    eventName: string,\r\n    execute: (e: Event) => void\r\n}\r\n\r\nexport function showMessage(\r\n    title: string,\r\n    message: string,\r\n    buttons: ButtonList | (string | boolean)[] = [false, true],\r\n    buttonEvents: ButtonEvent[] | null = null\r\n) {\r\n    const sw = swal({\r\n        title: title,\r\n        text: message,\r\n        buttons: buttons\r\n    })\r\n    if (buttonEvents != null) {\r\n        for (const buttonEvent of buttonEvents) {\r\n            document.querySelector(`.${buttonEvent.className}`)?.addEventListener(buttonEvent.eventName, (e) => buttonEvent.execute(e))\r\n        }\r\n    }\r\n\r\n    return sw\r\n}\r\n\r\nexport function showNotification(message: string, duration_s: number = 2.3) {\r\n    return swal(message, {\r\n        buttons: [false, false],\r\n        timer: duration_s * 1000\r\n    })\r\n}\r\n\r\nconst Alerts = {\r\n    showMessage,\r\n    showNotification\r\n}\r\n\r\nexport default Alerts"]},"metadata":{},"sourceType":"module"}