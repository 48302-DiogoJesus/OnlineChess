{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport Actions from './actions/action';\nimport { store as Store } from '../index';\nimport Server from '../server/server';\nimport { useSelector } from 'react-redux';\nexport function GetAppState() {\n  _s();\n\n  return useSelector(state => state);\n}\n\n_s(GetAppState, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = GetAppState;\nexport function joinGame(game_id) {\n  return function (dispatch, getState) {\n    Server.getGame(game_id).then(response => {\n      // Game Exists\n      if (response.success) {\n        const gameObject = response.data; // ! PieceColor.WHITE IS HARDCODED, LATER CALCULATE IT FROM COMPARING THE STATE USERNAME WITH THE PLAYER_WHITE AND PLAYER_BLACK\n\n        const username = getState().authentication.username;\n        dispatch(Actions.joinGame(gameObject));\n      }\n    });\n  };\n}\nexport function login(username) {\n  Store.dispatch(Actions.doLogin(username));\n}\nexport function logout(username, password) {\n  Store.dispatch(Actions.doLogout);\n}\nexport function leaveGame() {\n  Store.dispatch(Actions.leaveGame());\n}\nconst State = {\n  GetAppState,\n  joinGame,\n  login,\n  logout,\n  leaveGame\n};\nexport default State;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetAppState\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/state/State.ts"],"names":["Actions","store","Store","Server","useSelector","GetAppState","state","joinGame","game_id","dispatch","getState","getGame","then","response","success","gameObject","data","username","authentication","login","doLogin","logout","password","doLogout","leaveGame","State"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,kBAApB;AACA,SAASC,KAAK,IAAIC,KAAlB,QAA+B,UAA/B;AACA,OAAOC,MAAP,MAAuC,kBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAO,SAASC,WAAT,GAAiC;AAAA;;AACpC,SAAOD,WAAW,CAAEE,KAAD,IAAqBA,KAAtB,CAAlB;AACH;;GAFeD,W;UACLD,W;;;KADKC,W;AAIhB,OAAO,SAASE,QAAT,CAAkBC,OAAlB,EAAmC;AACtC,SAAO,UAAUC,QAAV,EAAyBC,QAAzB,EAAwC;AAC3CP,IAAAA,MAAM,CAACQ,OAAP,CAAeH,OAAf,EACKI,IADL,CACWC,QAAD,IAA8B;AAChC;AACA,UAAIA,QAAQ,CAACC,OAAb,EAAsB;AAClB,cAAMC,UAAU,GAAGF,QAAQ,CAACG,IAA5B,CADkB,CAElB;;AACA,cAAMC,QAAQ,GAAIP,QAAQ,EAAT,CAAyBQ,cAAzB,CAAwCD,QAAzD;AACAR,QAAAA,QAAQ,CAACT,OAAO,CAACO,QAAR,CAAiBQ,UAAjB,CAAD,CAAR;AACH;AACJ,KATL;AAUH,GAXD;AAYH;AAED,OAAO,SAASI,KAAT,CAAeF,QAAf,EAAiC;AACpCf,EAAAA,KAAK,CAACO,QAAN,CAAeT,OAAO,CAACoB,OAAR,CAAgBH,QAAhB,CAAf;AACH;AAED,OAAO,SAASI,MAAT,CAAgBJ,QAAhB,EAAkCK,QAAlC,EAAoD;AACvDpB,EAAAA,KAAK,CAACO,QAAN,CAAeT,OAAO,CAACuB,QAAvB;AACH;AAED,OAAO,SAASC,SAAT,GAAqB;AACxBtB,EAAAA,KAAK,CAACO,QAAN,CAAeT,OAAO,CAACwB,SAAR,EAAf;AACH;AAED,MAAMC,KAAK,GAAG;AACVpB,EAAAA,WADU;AAEVE,EAAAA,QAFU;AAGVY,EAAAA,KAHU;AAIVE,EAAAA,MAJU;AAKVG,EAAAA;AALU,CAAd;AAQA,eAAeC,KAAf","sourcesContent":["import Actions from './actions/action'\r\nimport { store as Store } from '../index'\r\nimport Server, { ServerResponse } from '../server/server'\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState, Game } from './reducers/root'\r\n\r\nexport function GetAppState(): AppState {\r\n    return useSelector((state: AppState) => state)\r\n}\r\n\r\nexport function joinGame(game_id: string) {\r\n    return function (dispatch: any, getState: any) {\r\n        Server.getGame(game_id)\r\n            .then((response: ServerResponse) => {\r\n                // Game Exists\r\n                if (response.success) {\r\n                    const gameObject = response.data as Game\r\n                    // ! PieceColor.WHITE IS HARDCODED, LATER CALCULATE IT FROM COMPARING THE STATE USERNAME WITH THE PLAYER_WHITE AND PLAYER_BLACK\r\n                    const username = (getState() as AppState).authentication.username\r\n                    dispatch(Actions.joinGame(gameObject))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function login(username: string) {\r\n    Store.dispatch(Actions.doLogin(username))\r\n}\r\n\r\nexport function logout(username: string, password: string) {\r\n    Store.dispatch(Actions.doLogout)\r\n}\r\n\r\nexport function leaveGame() {\r\n    Store.dispatch(Actions.leaveGame())\r\n}\r\n\r\nconst State = {\r\n    GetAppState,\r\n    joinGame,\r\n    login,\r\n    logout,\r\n    leaveGame\r\n}\r\n\r\nexport default State"]},"metadata":{},"sourceType":"module"}