{"ast":null,"code":"export let PieceColor;\n\n(function (PieceColor) {\n  PieceColor[\"BLACK\"] = \"b\";\n  PieceColor[\"WHITE\"] = \"w\";\n})(PieceColor || (PieceColor = {}));\n\nexport let PieceType;\n\n(function (PieceType) {\n  PieceType[\"PAWN\"] = \"p\";\n  PieceType[\"KING\"] = \"k\";\n  PieceType[\"QUEEN\"] = \"q\";\n  PieceType[\"ROOK\"] = \"r\";\n  PieceType[\"KNIGHT\"] = \"n\";\n  PieceType[\"BISHOP\"] = \"b\";\n})(PieceType || (PieceType = {}));\n\nexport function charToPiece(char) {\n  if (char.length != 1) return null;\n  const piece = [PieceType.PAWN, PieceType.KING, PieceType.QUEEN, PieceType.ROOK, PieceType.KNIGHT, PieceType.BISHOP].find(elem => char.toLowerCase() === elem);\n  if (piece === undefined) return null;\n  return {\n    color: PieceColor.WHITE,\n    type: piece\n  };\n}","map":{"version":3,"sources":["C:/Users/jesus/Desktop/TS/OnlineChess/onlinechess/src/domain/piece.tsx"],"names":["PieceColor","PieceType","charToPiece","char","length","piece","PAWN","KING","QUEEN","ROOK","KNIGHT","BISHOP","find","elem","toLowerCase","undefined","color","WHITE","type"],"mappings":"AAAA,WAAYA,UAAZ;;WAAYA,U;AAAAA,EAAAA,U;AAAAA,EAAAA,U;GAAAA,U,KAAAA,U;;AAKZ,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;AAAAA,EAAAA,S;GAAAA,S,KAAAA,S;;AASZ,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAAuD;AAC1D,MAAIA,IAAI,CAACC,MAAL,IAAe,CAAnB,EACI,OAAO,IAAP;AACJ,QAAMC,KAAK,GAAG,CAACJ,SAAS,CAACK,IAAX,EAAiBL,SAAS,CAACM,IAA3B,EAAiCN,SAAS,CAACO,KAA3C,EAAkDP,SAAS,CAACQ,IAA5D,EAAkER,SAAS,CAACS,MAA5E,EAAoFT,SAAS,CAACU,MAA9F,EAAsGC,IAAtG,CAA2GC,IAAI,IAAIV,IAAI,CAACW,WAAL,OAAuBD,IAA1I,CAAd;AACA,MAAIR,KAAK,KAAKU,SAAd,EACI,OAAO,IAAP;AACJ,SAAO;AACHC,IAAAA,KAAK,EAAEhB,UAAU,CAACiB,KADf;AAEHC,IAAAA,IAAI,EAAEb;AAFH,GAAP;AAIH","sourcesContent":["export enum PieceColor { \r\n    BLACK = 'b', \r\n    WHITE = 'w'\r\n}\r\n\r\nexport enum PieceType {\r\n    PAWN = 'p', \r\n    KING = 'k', \r\n    QUEEN = 'q', \r\n    ROOK = 'r', \r\n    KNIGHT = 'n',\r\n    BISHOP = 'b'\r\n}\r\n\r\nexport function charToPiece(char: string): PieceObject | null {\r\n    if (char.length != 1)\r\n        return null\r\n    const piece = [PieceType.PAWN, PieceType.KING, PieceType.QUEEN, PieceType.ROOK, PieceType.KNIGHT, PieceType.BISHOP].find(elem => char.toLowerCase() === elem)\r\n    if (piece === undefined)\r\n        return null\r\n    return {\r\n        color: PieceColor.WHITE,\r\n        type: piece\r\n    }\r\n}\r\n\r\nexport interface PieceObject {\r\n    color: PieceColor,\r\n    type: PieceType\r\n}"]},"metadata":{},"sourceType":"module"}