{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport CONFIG from '../../server/config';\nimport { doLogin } from '../../state/actions/action';\nimport { store } from '../../index';\nimport { useSelector } from 'react-redux';\nexport async function getUsername() {\n  _s();\n\n  useSelector(state => state).authentication.username;\n}\n\n_s(getUsername, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\nexport async function attemptLogin(username, password) {\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\n    'username': username,\n    'password': password\n  });\n\n  if (loginResponse.status === 200) {\n    store.dispatch(doLogin(username));\n    return true;\n  } else return loginResponse.data.error;\n}\nexport async function attemptSignup(username, password) {\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\n    'username': username,\n    'password': password\n  });\n\n  if (loginResponse.status === 201) {\n    store.dispatch(doLogin(username));\n    return true;\n  } else return loginResponse.data.error;\n}","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/Authentication/Authentication.ts"],"names":["CONFIG","doLogin","store","useSelector","getUsername","state","authentication","username","attemptLogin","password","loginResponse","AXIOSINSTANCE","post","status","dispatch","data","error","attemptSignup"],"mappings":";;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AAGA,OAAO,eAAeC,WAAf,GAA6B;AAAA;;AAChCD,EAAAA,WAAW,CAAEE,KAAD,IAAqBA,KAAtB,CAAX,CAAwCC,cAAxC,CAAuDC,QAAvD;AACH;;GAFqBH,W;UAClBD,W;;;AAGJ,OAAO,eAAeK,YAAf,CAA4BD,QAA5B,EAA8CE,QAA9C,EAAgE;AACnE,QAAMC,aAAa,GAAG,MAAMV,MAAM,CAACW,aAAP,CAAqBC,IAArB,CAA0B,OAA1B,EAAmC;AAC3D,gBAAYL,QAD+C;AAE3D,gBAAYE;AAF+C,GAAnC,CAA5B;;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EAAkC;AAC9BX,IAAAA,KAAK,CAACY,QAAN,CAAeb,OAAO,CAACM,QAAD,CAAtB;AACA,WAAO,IAAP;AACH,GAHD,MAKI,OAAOG,aAAa,CAACK,IAAd,CAAmBC,KAA1B;AACP;AAED,OAAO,eAAeC,aAAf,CAA6BV,QAA7B,EAA+CE,QAA/C,EAAiE;AACpE,QAAMC,aAAa,GAAG,MAAMV,MAAM,CAACW,aAAP,CAAqBC,IAArB,CAA0B,QAA1B,EAAoC;AAC5D,gBAAYL,QADgD;AAE5D,gBAAYE;AAFgD,GAApC,CAA5B;;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EAAkC;AAC9BX,IAAAA,KAAK,CAACY,QAAN,CAAeb,OAAO,CAACM,QAAD,CAAtB;AACA,WAAO,IAAP;AACH,GAHD,MAKI,OAAOG,aAAa,CAACK,IAAd,CAAmBC,KAA1B;AACP","sourcesContent":["import CONFIG from '../../server/config'\r\n\r\nimport { doLogin } from '../../state/actions/action'\r\nimport { store } from '../../index'\r\nimport { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { AppState } from '../../state/reducers/root'\r\n\r\nexport async function getUsername() {\r\n    useSelector((state: AppState) => state).authentication.username\r\n}\r\n\r\nexport async function attemptLogin(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 200) {\r\n        store.dispatch(doLogin(username))\r\n        return true\r\n    }\r\n    else\r\n        return loginResponse.data.error\r\n}\r\n\r\nexport async function attemptSignup(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 201) {\r\n        store.dispatch(doLogin(username))\r\n        return true\r\n    }\r\n    else\r\n        return loginResponse.data.error\r\n}"]},"metadata":{},"sourceType":"module"}