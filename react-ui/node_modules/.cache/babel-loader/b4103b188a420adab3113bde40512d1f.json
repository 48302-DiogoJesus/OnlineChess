{"ast":null,"code":"import CONFIG from '../../server/config';\nexport async function attemptLogin(username, password) {\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\n    'username': username,\n    'password': password\n  });\n  if (loginResponse.status === 200) return true;else return loginResponse.data.error;\n}\nexport async function attemptSignup(username, password) {\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\n    'username': username,\n    'password': password\n  });\n  if (loginResponse.status === 201) return true;else return loginResponse.data.error;\n}","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/Authentication/Authentication.ts"],"names":["CONFIG","attemptLogin","username","password","loginResponse","AXIOSINSTANCE","post","status","data","error","attemptSignup"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAGA,OAAO,eAAeC,YAAf,CAA4BC,QAA5B,EAA8CC,QAA9C,EAAgE;AACnE,QAAMC,aAAa,GAAG,MAAMJ,MAAM,CAACK,aAAP,CAAqBC,IAArB,CAA0B,OAA1B,EAAmC;AAC3D,gBAAYJ,QAD+C;AAE3D,gBAAYC;AAF+C,GAAnC,CAA5B;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EACI,OAAO,IAAP,CADJ,KAGI,OAAOH,aAAa,CAACI,IAAd,CAAmBC,KAA1B;AACP;AAED,OAAO,eAAeC,aAAf,CAA6BR,QAA7B,EAA+CC,QAA/C,EAAiE;AACpE,QAAMC,aAAa,GAAG,MAAMJ,MAAM,CAACK,aAAP,CAAqBC,IAArB,CAA0B,QAA1B,EAAoC;AAC5D,gBAAYJ,QADgD;AAE5D,gBAAYC;AAFgD,GAApC,CAA5B;AAIA,MAAIC,aAAa,CAACG,MAAd,KAAyB,GAA7B,EACI,OAAO,IAAP,CADJ,KAGI,OAAOH,aAAa,CAACI,IAAd,CAAmBC,KAA1B;AACP","sourcesContent":["import CONFIG from '../../server/config' \r\nimport { useEffect } from 'react';\r\n\r\nexport async function attemptLogin(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/auth', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 200)\r\n        return true\r\n    else \r\n        return loginResponse.data.error \r\n}\r\n\r\nexport async function attemptSignup(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 201)\r\n        return true\r\n    else \r\n        return loginResponse.data.error \r\n}"]},"metadata":{},"sourceType":"module"}