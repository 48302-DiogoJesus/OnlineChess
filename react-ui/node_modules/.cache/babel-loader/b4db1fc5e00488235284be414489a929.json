{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\chessbackend\\\\react-ui\\\\src\\\\pages\\\\GamePage\\\\components\\\\ChessBoard\\\\Tile\\\\Tile.tsx\";\nimport './tile.css';\nimport Piece from '../Piece/Piece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let TileColor;\n\n(function (TileColor) {\n  TileColor[TileColor[\"DARK\"] = 0] = \"DARK\";\n  TileColor[TileColor[\"LIGHT\"] = 1] = \"LIGHT\";\n})(TileColor || (TileColor = {}));\n\nexport default function Tile(props) {\n  const calcTileBackground = () => {\n    if (props.selected) return 'tile selected';\n    if (props.target) return 'tile target';\n    if (props.color === TileColor.DARK) return 'tile dark';else if (props.color === TileColor.LIGHT) return 'tile light';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: calcTileBackground(),\n    onClick: props.onTileClick,\n    children: props.piece === null ? null : /*#__PURE__*/_jsxDEV(Piece, {\n      piece: props.piece\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/chessbackend/react-ui/src/pages/GamePage/components/ChessBoard/Tile/Tile.tsx"],"names":["Piece","TileColor","Tile","props","calcTileBackground","selected","target","color","DARK","LIGHT","onTileClick","piece"],"mappings":";AAAA,OAAO,YAAP;AAEA,OAAOA,KAAP,MAAkB,gBAAlB;;AAGA,WAAYC,SAAZ;;WAAYA,S;AAAAA,EAAAA,S,CAAAA,S;AAAAA,EAAAA,S,CAAAA,S;GAAAA,S,KAAAA,S;;AAEZ,eAAe,SAASC,IAAT,CACbC,KADa,EAUV;AAEH,QAAMC,kBAAkB,GAAG,MAAM;AAC/B,QAAID,KAAK,CAACE,QAAV,EACE,OAAO,eAAP;AAEF,QAAIF,KAAK,CAACG,MAAV,EACE,OAAO,aAAP;AAEF,QAAIH,KAAK,CAACI,KAAN,KAAgBN,SAAS,CAACO,IAA9B,EACE,OAAO,WAAP,CADF,KAEK,IAAIL,KAAK,CAACI,KAAN,KAAgBN,SAAS,CAACQ,KAA9B,EACH,OAAO,YAAP;AAEH,GAZD;;AAcA,sBACE;AAAK,IAAA,SAAS,EAAEL,kBAAkB,EAAlC;AAAsC,IAAA,OAAO,EAAED,KAAK,CAACO,WAArD;AAAA,cAEIP,KAAK,CAACQ,KAAN,KAAgB,IAAhB,GAEE,IAFF,gBAIE,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER,KAAK,CAACQ;AAApB;AAAA;AAAA;AAAA;AAAA;AANN;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KArCuBT,I","sourcesContent":["import './tile.css'\r\nimport { Piece as PieceObject } from '../../../../../domain/piece';\r\nimport Piece from '../Piece/Piece'\r\nimport { PositionObject } from '../../../../../domain/position';\r\n\r\nexport enum TileColor { DARK, LIGHT }\r\n\r\nexport default function Tile(\r\n  props: {\r\n    selected: boolean,\r\n    target: boolean,\r\n    lastMove: boolean,\r\n\r\n    position: PositionObject,\r\n    color: TileColor,\r\n    piece: PieceObject | null,\r\n    onTileClick: () => void,\r\n  }) {\r\n\r\n  const calcTileBackground = () => {\r\n    if (props.selected)\r\n      return 'tile selected'\r\n\r\n    if (props.target)\r\n      return 'tile target'\r\n\r\n    if (props.color === TileColor.DARK)\r\n      return 'tile dark'\r\n    else if (props.color === TileColor.LIGHT)\r\n      return 'tile light'\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={calcTileBackground()} onClick={props.onTileClick}>\r\n      {\r\n        props.piece === null\r\n          ?\r\n          null\r\n          :\r\n          <Piece piece={props.piece} />\r\n      }\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}