{"ast":null,"code":"import CONFIG from'./config';import Alerts from'../utils/Alerts/sa-alerts';import State from'../state/State';var AXIOSI=CONFIG.AXIOSINSTANCE;function getHeaders(){var token=State.getAppState().authentication.token;if(token!=null)return{'Authorization':'Bearer '+State.getAppState().authentication.token};else return{};}// Private\nfunction responseIntercept(response){var showPopupOnError=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;if(response.status<200||response.status>=400){// If not authorized logout to avoid visual bugs\nif(response.status==401){State.logout();}var responseAsError=response.data.error;if(showPopupOnError)Alerts.showNotification(responseAsError.message);return{success:false,data:responseAsError};}return{success:true,data:response.data.data};}function handleRequestError(err){return{success:false,data:{http_code:503,message:err.message==\"Network Error\"?\"Server is Offline\":err.message}};}// PUBLIC FUNCTIONS\nvar logout=function logout(){return AXIOSI.get('/auth/logout',{headers:getHeaders()}).then(function(res){return responseIntercept(res,false);}).catch(function(err){return handleRequestError(err);});};var getGame=function getGame(game_id){return AXIOSI.get(\"/games?id=\".concat(game_id),{headers:getHeaders()}).then(function(res){return responseIntercept(res,false);}).catch(function(err){return handleRequestError(err);});};var tryLogin=function tryLogin(username,password){return AXIOSI.post('/auth',{username:username,password:password},{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var trySignup=function trySignup(username,password){return AXIOSI.post('/users',{username:username,password:password},{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var createGame=function createGame(game_id){var is_public=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var opponent=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;return AXIOSI.post(\"/games\",{id:game_id,public:is_public,player2:opponent},{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var joinAsPlayerB=function joinAsPlayerB(game_id){return AXIOSI.get(\"/games/connect?id=\".concat(game_id),{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var makeMove=function makeMove(game_id,move){return AXIOSI.get(\"/games/makemove?id=\".concat(game_id,\"&move=\").concat(move),{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var incrementViewers=function incrementViewers(game_id){return AXIOSI.post('/games/incrementviewers',{id:game_id},{headers:getHeaders()}).then(function(res){return responseIntercept(res);}).catch(function(err){return handleRequestError(err);});};var Server={// Game\ncreateGame:createGame,getGame:getGame,joinAsPlayerB:joinAsPlayerB,makeMove:makeMove,incrementViewers:incrementViewers,// Authentication\nlogout:logout,tryLogin:tryLogin,trySignup:trySignup};export default Server;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/server/server.ts"],"names":["CONFIG","Alerts","State","AXIOSI","AXIOSINSTANCE","getHeaders","token","getAppState","authentication","responseIntercept","response","showPopupOnError","status","logout","responseAsError","data","error","showNotification","message","success","handleRequestError","err","http_code","get","headers","then","res","catch","getGame","game_id","tryLogin","username","password","post","trySignup","createGame","is_public","opponent","id","public","player2","joinAsPlayerB","makeMove","move","incrementViewers","Server"],"mappings":"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","sourcesContent":["import { AxiosInstance, AxiosRequestHeaders, AxiosResponse } from 'axios'\r\nimport CONFIG from './config'\r\n\r\nimport Alerts from '../utils/Alerts/sa-alerts'\r\nimport State from '../state/State'\r\nimport { PieceColor } from '../domain/piece'\r\n\r\nconst AXIOSI = CONFIG.AXIOSINSTANCE\r\n\r\nfunction getHeaders(): AxiosRequestHeaders {\r\n    const token = State.getAppState().authentication.token\r\n    if (token != null)\r\n        return { 'Authorization': 'Bearer ' + State.getAppState().authentication.token }\r\n    else\r\n        return {}\r\n}\r\n\r\n// Private\r\nexport interface ServerError {\r\n    http_code: number,\r\n    message: string\r\n}\r\n\r\nexport interface ServerResponse {\r\n    success: boolean,\r\n    data: any | ServerError\r\n}\r\n\r\nexport interface RemoteGame {\r\n    _id: string,\r\n    player_w: string,   // username of player1\r\n    player_b: string | null,  // username of player2\r\n\r\n    moves: string[],\r\n    winner: PieceColor | null,\r\n    views: number\r\n}\r\n\r\n\r\nfunction responseIntercept(response: AxiosResponse, showPopupOnError: boolean = true): ServerResponse {\r\n    if (response.status < 200 || response.status >= 400) {\r\n        // If not authorized logout to avoid visual bugs\r\n        if (response.status == 401) {\r\n            State.logout()\r\n        }\r\n        const responseAsError = response.data.error as ServerError\r\n        if (showPopupOnError)\r\n            Alerts.showNotification(responseAsError.message)\r\n        return { success: false, data: responseAsError }\r\n    }\r\n    return { success: true, data: response.data.data }\r\n}\r\n\r\nfunction handleRequestError(err: any): ServerResponse {\r\n    return {\r\n        success: false,\r\n        data: {\r\n            http_code: 503,\r\n            message: err.message == \"Network Error\"\r\n                ? \"Server is Offline\"\r\n                : err.message,\r\n        }\r\n    }\r\n}\r\n\r\n// PUBLIC FUNCTIONS\r\nconst logout = (): Promise<ServerResponse> =>\r\n    AXIOSI.get('/auth/logout', {\r\n        headers: getHeaders()\r\n    })\r\n        .then((res: AxiosResponse) => responseIntercept(res, false))\r\n        .catch(err => handleRequestError(err))\r\n\r\n\r\nconst getGame = (game_id: string): Promise<ServerResponse> =>\r\n    AXIOSI.get(`/games?id=${game_id}`, {\r\n        headers: getHeaders()\r\n    })\r\n        .then((res: AxiosResponse) => responseIntercept(res, false))\r\n        .catch(err => handleRequestError(err))\r\n\r\n\r\nconst tryLogin = (username: string, password: string): Promise<ServerResponse> =>\r\n    AXIOSI.post('/auth', {\r\n        username: username,\r\n        password: password\r\n    }, { headers: getHeaders() })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\n\r\nconst trySignup = (username: string, password: string): Promise<ServerResponse> =>\r\n    AXIOSI.post('/users', {\r\n        username: username,\r\n        password: password\r\n    }, { headers: getHeaders() })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\n\r\nconst createGame = (game_id: string, is_public: boolean = true, opponent: string | null = null): Promise<ServerResponse> =>\r\n    AXIOSI.post(`/games`, {\r\n        id: game_id,\r\n        public: is_public,\r\n        player2: opponent,\r\n    }, { headers: getHeaders() })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\n\r\nconst joinAsPlayerB = (game_id: string): Promise<ServerResponse> =>\r\n    AXIOSI.get(`/games/connect?id=${game_id}`, {\r\n        headers: getHeaders(),\r\n    })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\nconst makeMove = (game_id: string, move: string): Promise<ServerResponse> =>\r\n    AXIOSI.get(`/games/makemove?id=${game_id}&move=${move}`, {\r\n        headers: getHeaders(),\r\n    })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\nconst incrementViewers = (game_id: string) =>\r\n    AXIOSI.post('/games/incrementviewers', {\r\n        id: game_id\r\n    }, { headers: getHeaders() })\r\n        .then((res: AxiosResponse) => responseIntercept(res))\r\n        .catch(err => handleRequestError(err))\r\n\r\nconst Server = {\r\n    // Game\r\n    createGame,\r\n    getGame,\r\n    joinAsPlayerB,\r\n    makeMove,\r\n    incrementViewers,\r\n\r\n    // Authentication\r\n    logout,\r\n    tryLogin,\r\n    trySignup\r\n}\r\n\r\nexport default Server"]},"metadata":{},"sourceType":"module"}