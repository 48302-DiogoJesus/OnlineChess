{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\onlinechess\\\\src\\\\pages\\\\GamePage\\\\GamePage.tsx\",\n    _s = $RefreshSig$();\n\nimport './GamePage.css';\nimport GameVS from '../../components/GameVS/GameVS';\nimport GameInfo from '../../components/GameInfo/GameInfo';\nimport GameCountdown from '../../components/GameCountdown/GameCountdown';\nimport GameChat from '../../components/GameChat/GameChat';\nimport GameButtons from '../../components/GameButtons/GameButtons';\nimport Board from '../../components/ChessBoard/Board/Board';\nimport CONFIG from '../../server/config';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport { useParams } from \"react-router-dom\";\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GamePage() {\n  _s();\n\n  const {\n    game_id\n  } = useParams(); // const [state, setState] = useState(fetchGameData())\n\n  const fetchGameData = async () => {\n    const response = await axios.post(CONFIG.SERVER_ADDR + `/games?id=${game_id}`, {\n      body: JSON.stringify({\n        username: 'J3ZERA',\n        password: 'mypass'\n      })\n    });\n    console.log(response);\n  };\n\n  useEffect(() => {\n    fetchGameData();\n  }, []);\n  const initialState = useSelector(state => state);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global-container\",\n    children: game_id === null ? 'Not game' : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container-row\",\n        children: [/*#__PURE__*/_jsxDEV(GameVS, {\n          player1: initialState.game.player_white,\n          player2: initialState.game.player_black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameCountdown, {\n          initalTime: 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container-row\",\n        children: [/*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameChat, {\n          game_id: game_id,\n          player1: initialState.game.player_white,\n          player2: initialState.game.player_black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container-row\",\n        children: [/*#__PURE__*/_jsxDEV(GameInfo, {\n          game_id: game_id,\n          player2: initialState.game.player_black\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(GameButtons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(GamePage, \"l6e2Zrufqd7DZtcYgE24TBH8acw=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = GamePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/GamePage/GamePage.tsx"],"names":["GameVS","GameInfo","GameCountdown","GameChat","GameButtons","Board","CONFIG","axios","useSelector","useParams","useEffect","GamePage","game_id","fetchGameData","response","post","SERVER_ADDR","body","JSON","stringify","username","password","console","log","initialState","state","game","player_white","player_black"],"mappings":";;;AAAA,OAAO,gBAAP;AAEA,OAAOA,MAAP,MAAmB,gCAAnB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,WAAP,MAAwB,0CAAxB;AACA,OAAOC,KAAP,MAAkB,yCAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,QAAyC,aAAzC;AAGA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAmBC,SAAnB,QAAoC,OAApC;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAEjC,QAAM;AAAEC,IAAAA;AAAF,MAAcH,SAAS,EAA7B,CAFiC,CAIjC;;AAEA,QAAMI,aAAa,GAAG,YAAY;AAChC,UAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAAWT,MAAM,CAACU,WAAP,GAAsB,aAAYJ,OAAQ,EAArD,EAAwD;AAC7EK,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,QAAAA,QAAQ,EAAE,QADS;AAEnBC,QAAAA,QAAQ,EAAE;AAFS,OAAf;AADuE,KAAxD,CAAvB;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACD,GARD;;AAUAJ,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAMW,YAAY,GAAGhB,WAAW,CAAEiB,KAAD,IAAqBA,KAAtB,CAAhC;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,cACGb,OAAO,KAAK,IAAZ,GACC,UADD,gBAGC;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEY,YAAY,CAACE,IAAb,CAAkBC,YAAnC;AAAiD,UAAA,OAAO,EAAEH,YAAY,CAACE,IAAb,CAAkBE;AAA5E;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AAAe,UAAA,UAAU,EAAE;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEhB,OAAnB;AAA8B,UAAA,OAAO,EAAEY,YAAY,CAACE,IAAb,CAAkBC,YAAzD;AAAuE,UAAA,OAAO,EAAEH,YAAY,CAACE,IAAb,CAAkBE;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEhB,OAAnB;AAA8B,UAAA,OAAO,EAAEY,YAAY,CAACE,IAAb,CAAkBE;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA/CuBjB,Q;UAEFF,S,EAkBCD,W;;;KApBCG,Q","sourcesContent":["import './GamePage.css'\r\n\r\nimport GameVS from '../../components/GameVS/GameVS'\r\nimport GameInfo from '../../components/GameInfo/GameInfo'\r\nimport GameCountdown from '../../components/GameCountdown/GameCountdown'\r\nimport GameChat from '../../components/GameChat/GameChat'\r\nimport GameButtons from '../../components/GameButtons/GameButtons'\r\nimport Board from '../../components/ChessBoard/Board/Board'\r\nimport CONFIG from '../../server/config'\r\nimport axios from 'axios'\r\n\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { AppState } from '../../state/reducers/root'\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport default function GamePage() {\r\n  \r\n  const { game_id } = useParams()\r\n\r\n  // const [state, setState] = useState(fetchGameData())\r\n  \r\n  const fetchGameData = async () => {\r\n    const response = await axios.post(CONFIG.SERVER_ADDR + `/games?id=${game_id}`, { \r\n      body: JSON.stringify({\r\n        username: 'J3ZERA',\r\n        password: 'mypass'\r\n      })\r\n    })\r\n    console.log(response)\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchGameData()\r\n  }, [])\r\n\r\n  const initialState = useSelector((state: AppState) => state)\r\n\r\n  return (\r\n    <div className=\"global-container\">\r\n      {game_id === null ? (\r\n        'Not game'\r\n      ) : (\r\n        <div className=\"game-container\">\r\n          <div className=\"game-container-row\">\r\n            <GameVS player1={initialState.game.player_white} player2={initialState.game.player_black}/>\r\n            <GameCountdown initalTime={0} />\r\n          </div>\r\n          <div className=\"game-container-row\">\r\n            <Board />\r\n            <GameChat game_id={game_id!!} player1={initialState.game.player_white} player2={initialState.game.player_black}/>\r\n          </div>\r\n          <div className=\"game-container-row\">\r\n            <GameInfo game_id={game_id!!} player2={initialState.game.player_black} />\r\n            <GameButtons />\r\n          </div>\r\n        </div>\r\n      )\r\n      \r\n    }\r\n      \r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}