{"ast":null,"code":"import axios from 'axios';\nimport State from '../state/State';\nconst PROD = false;\nconst PROD_BACKEND_URL = 'https://chess-backend-api.herokuapp.com/';\nconst BACKEND_URL = PROD ? PROD_BACKEND_URL : `http://localhost:7000`;\n\nfunction getTokenFromState() {\n  try {\n    const token = State.getAppState().authentication.token;\n    console.log(token);\n    return token;\n  } catch (err) {// IGNORE\n  }\n}\n\nconst axiosI = axios.create({\n  baseURL: BACKEND_URL,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\n  },\n  validateStatus: () => true\n});\nconst config = {\n  SERVER_URL: BACKEND_URL,\n  AXIOSINSTANCE: axiosI\n};\nexport default config;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/server/config.ts"],"names":["axios","State","PROD","PROD_BACKEND_URL","BACKEND_URL","getTokenFromState","token","getAppState","authentication","console","log","err","axiosI","create","baseURL","headers","validateStatus","config","SERVER_URL","AXIOSINSTANCE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,MAAMC,IAAI,GAAG,KAAb;AAEA,MAAMC,gBAAgB,GAAG,0CAAzB;AACA,MAAMC,WAAW,GAAGF,IAAI,GAAGC,gBAAH,GAAuB,uBAA/C;;AAEA,SAASE,iBAAT,GAA6B;AACzB,MAAI;AACA,UAAMC,KAAK,GAAGL,KAAK,CAACM,WAAN,GAAoBC,cAApB,CAAmCF,KAAjD;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACA,WAAOA,KAAP;AACH,GAJD,CAIE,OAAOK,GAAP,EAAY,CACV;AACH;AACJ;;AAED,MAAMC,MAAM,GAAGZ,KAAK,CAACa,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEV,WADe;AAExBW,EAAAA,OAAO,EAAE;AACL,mCAA+B,GAD1B;AAEL,oCAAgC;AAF3B,GAFe;AAMxBC,EAAAA,cAAc,EAAE,MAAM;AANE,CAAb,CAAf;AASA,MAAMC,MAAM,GAAG;AACXC,EAAAA,UAAU,EAAEd,WADD;AAEXe,EAAAA,aAAa,EAAEP;AAFJ,CAAf;AAKA,eAAeK,MAAf","sourcesContent":["import axios from 'axios'\r\nimport State from '../state/State'\r\n\r\nconst PROD = false\r\n\r\nconst PROD_BACKEND_URL = 'https://chess-backend-api.herokuapp.com/'\r\nconst BACKEND_URL = PROD ? PROD_BACKEND_URL : `http://localhost:7000`\r\n\r\nfunction getTokenFromState() {\r\n    try {\r\n        const token = State.getAppState().authentication.token\r\n        console.log(token)\r\n        return token\r\n    } catch (err) {\r\n        // IGNORE\r\n    }\r\n}\r\n\r\nconst axiosI = axios.create({\r\n    baseURL: BACKEND_URL,\r\n    headers: {\r\n        'Access-Control-Allow-Origin': '*',\r\n        'Access-Control-Allow-Methods': 'GET,PUT,POST,DELETE,PATCH,OPTIONS'\r\n    },\r\n    validateStatus: () => true,\r\n})\r\n\r\nconst config = {\r\n    SERVER_URL: BACKEND_URL,\r\n    AXIOSINSTANCE: axiosI\r\n}\r\n\r\nexport default config;"]},"metadata":{},"sourceType":"module"}