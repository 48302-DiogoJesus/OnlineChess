{"ast":null,"code":"import { NotificationManager } from 'react-notifications';\n\nfunction createNotification(type, message) {\n  let title = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  let duration = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 4000;\n  return;\n\n  switch (type) {\n    case 'info':\n      NotificationManager.info(message, title, duration);\n      break;\n\n    case 'success':\n      NotificationManager.success(message, title, duration);\n      break;\n\n    case 'warning':\n      NotificationManager.warning(message, title, duration);\n      break;\n\n    case 'error':\n      NotificationManager.error(message, title, duration, () => {// IGNORE: USE LATER IF NEEDED\n      });\n      break;\n  }\n}\n\n;\nexport default createNotification;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/javascript-utils/growl-notifications.js"],"names":["NotificationManager","createNotification","type","message","title","duration","info","success","warning","error"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,qBAApC;;AAEA,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,OAAlC,EAAwE;AAAA,MAA7BC,KAA6B,uEAArB,EAAqB;AAAA,MAAjBC,QAAiB,uEAAN,IAAM;AACpE;;AACA,UAAQH,IAAR;AACI,SAAK,MAAL;AACIF,MAAAA,mBAAmB,CAACM,IAApB,CAAyBH,OAAzB,EAAkCC,KAAlC,EAAyCC,QAAzC;AACA;;AACJ,SAAK,SAAL;AACIL,MAAAA,mBAAmB,CAACO,OAApB,CAA4BJ,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACJ,SAAK,SAAL;AACIL,MAAAA,mBAAmB,CAACQ,OAApB,CAA4BL,OAA5B,EAAqCC,KAArC,EAA4CC,QAA5C;AACA;;AACJ,SAAK,OAAL;AACIL,MAAAA,mBAAmB,CAACS,KAApB,CAA0BN,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD,MAAM,CACtD;AACH,OAFD;AAGA;AAdR;AAgBH;;AAAA;AAED,eAAeJ,kBAAf","sourcesContent":["import { NotificationManager } from 'react-notifications';\r\n\r\nfunction createNotification(type, message, title = \"\", duration = 4000) {\r\n    return\r\n    switch (type) {\r\n        case 'info':\r\n            NotificationManager.info(message, title, duration);\r\n            break;\r\n        case 'success':\r\n            NotificationManager.success(message, title, duration);\r\n            break;\r\n        case 'warning':\r\n            NotificationManager.warning(message, title, duration);\r\n            break;\r\n        case 'error':\r\n            NotificationManager.error(message, title, duration, () => {\r\n                // IGNORE: USE LATER IF NEEDED\r\n            });\r\n            break;\r\n    }\r\n};\r\n\r\nexport default createNotification;\r\n"]},"metadata":{},"sourceType":"module"}