{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesus\\\\Desktop\\\\TS\\\\OnlineChess\\\\onlinechess\\\\src\\\\components\\\\ChessBoard\\\\Board\\\\Board.tsx\";\nimport './board.css';\nimport Tile, { TileColor } from '../Tile/Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BOARD_WIDTH = 8;\nconst BOARD_HEIGHT = 8;\nexport default function Board() {\n  const generateBoardRow = () => {\n    const rowContents = [];\n    const board = Array(BOARD_HEIGHT).fill(null).map(() => Array(BOARD_WIDTH).fill(null));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: board.map((row, rowIdx) => {\n        row.map((col, colIdx) => {\n          return /*#__PURE__*/_jsxDEV(Tile, {\n            color: calcTileColor(rowIdx, colIdx)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 24\n          }, this);\n        });\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  };\n\n  const calcTileColor = (row, col) => (col + row) % 2 === 0 ? TileColor.LIGHT : TileColor.DARK;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: generateBoardRow()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/jesus/Desktop/TS/OnlineChess/onlinechess/src/components/ChessBoard/Board/Board.tsx"],"names":["Tile","TileColor","BOARD_WIDTH","BOARD_HEIGHT","Board","generateBoardRow","rowContents","board","Array","fill","map","row","rowIdx","col","colIdx","calcTileColor","LIGHT","DARK"],"mappings":";AAAA,OAAO,aAAP;AAEA,OAAOA,IAAP,IAAeC,SAAf,QAAgC,cAAhC;;AACA,MAAMC,WAAW,GAAG,CAApB;AACA,MAAMC,YAAY,GAAG,CAArB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAE9B,QAAMC,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,WAAW,GAAG,EAApB;AACA,UAAMC,KAAwB,GAAGC,KAAK,CAACL,YAAD,CAAL,CAAoBM,IAApB,CAAyB,IAAzB,EAA+BC,GAA/B,CAAmC,MAAIF,KAAK,CAACN,WAAD,CAAL,CAAmBO,IAAnB,CAAwB,IAAxB,CAAvC,CAAjC;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGF,KAAK,CAACG,GAAN,CAAU,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACxBD,QAAAA,GAAG,CAACD,GAAJ,CAAQ,CAACG,GAAD,EAAMC,MAAN,KAAiB;AACvB,8BAAO,QAAC,IAAD;AAAM,YAAA,KAAK,EAAEC,aAAa,CAACH,MAAD,EAASE,MAAT;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD,SAFD;AAGH,OAJA;AADH;AAAA;AAAA;AAAA;AAAA,YADJ;AASD,GAZD;;AAcA,QAAMC,aAAa,GAAG,CAACJ,GAAD,EAAcE,GAAd,KAA8B,CAACA,GAAG,GAAGF,GAAP,IAAc,CAAd,KAAoB,CAApB,GAAwBV,SAAS,CAACe,KAAlC,GAA0Cf,SAAS,CAACgB,IAAxG;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACKZ,gBAAgB;AADrB;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAvBuBD,K","sourcesContent":["import './board.css'\r\n\r\nimport Tile, { TileColor } from '../Tile/Tile';\r\nconst BOARD_WIDTH = 8;\r\nconst BOARD_HEIGHT = 8;\r\n\r\nexport default function Board() {\r\n\r\n  const generateBoardRow = () => {\r\n    const rowContents = []\r\n    const board: Array<Array<any>> = Array(BOARD_HEIGHT).fill(null).map(()=>Array(BOARD_WIDTH).fill(null));\r\n    return (\r\n        <div className=\"board-row\">\r\n          {board.map((row, rowIdx) => {\r\n              row.map((col, colIdx) => {\r\n                return <Tile color={calcTileColor(rowIdx, colIdx)}/>\r\n              })\r\n          })}\r\n        </div>\r\n    )\r\n  }\r\n\r\n  const calcTileColor = (row: number, col: number) => (col + row) % 2 === 0 ? TileColor.LIGHT : TileColor.DARK\r\n\r\n  return (\r\n    <div className=\"board\">\r\n        {generateBoardRow()}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}