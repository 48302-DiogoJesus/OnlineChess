{"ast":null,"code":"import swal from 'sweetalert';\nexport function showMessage(title, message) {\n  let buttons = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [false, true];\n  let buttonEvents = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  const sw = swal({\n    title: title,\n    text: message,\n    buttons: buttons\n  });\n\n  if (buttonEvents != null) {\n    for (const buttonEvent of buttonEvents) {\n      var _document$querySelect;\n\n      (_document$querySelect = document.querySelector(`.${buttonEvent.className}`)) === null || _document$querySelect === void 0 ? void 0 : _document$querySelect.addEventListener(buttonEvent.eventName, e => buttonEvent.execute(e));\n    }\n  }\n\n  return sw;\n}\nexport function showNotification(message) {\n  let duration_s = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.3;\n  return swal(message, {\n    buttons: [false, false],\n    timer: duration_s * 1000\n  });\n}\nconst Alerts = {\n  showMessage,\n  showNotification\n};\nexport default Alerts;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/chessbackend/react-ui/src/utils/Alerts/sa-alerts.ts"],"names":["swal","showMessage","title","message","buttons","buttonEvents","sw","text","buttonEvent","document","querySelector","className","addEventListener","eventName","e","execute","showNotification","duration_s","timer","Alerts"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,YAAjB;AASA,OAAO,SAASC,WAAT,CACHC,KADG,EAEHC,OAFG,EAKL;AAAA,MAFEC,OAEF,uEAF+C,CAAC,KAAD,EAAQ,IAAR,CAE/C;AAAA,MADEC,YACF,uEADuC,IACvC;AACE,QAAMC,EAAE,GAAGN,IAAI,CAAC;AACZE,IAAAA,KAAK,EAAEA,KADK;AAEZK,IAAAA,IAAI,EAAEJ,OAFM;AAGZC,IAAAA,OAAO,EAAEA;AAHG,GAAD,CAAf;;AAKA,MAAIC,YAAY,IAAI,IAApB,EAA0B;AACtB,SAAK,MAAMG,WAAX,IAA0BH,YAA1B,EAAwC;AAAA;;AACpC,+BAAAI,QAAQ,CAACC,aAAT,CAAwB,IAAGF,WAAW,CAACG,SAAU,EAAjD,iFAAqDC,gBAArD,CAAsEJ,WAAW,CAACK,SAAlF,EAA8FC,CAAD,IAAON,WAAW,CAACO,OAAZ,CAAoBD,CAApB,CAApG;AACH;AACJ;;AAED,SAAOR,EAAP;AACH;AAED,OAAO,SAASU,gBAAT,CAA0Bb,OAA1B,EAAqE;AAAA,MAA1Bc,UAA0B,uEAAL,GAAK;AACxE,SAAOjB,IAAI,CAACG,OAAD,EAAU;AACjBC,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,CADQ;AAEjBc,IAAAA,KAAK,EAAED,UAAU,GAAG;AAFH,GAAV,CAAX;AAIH;AAED,MAAME,MAAM,GAAG;AACXlB,EAAAA,WADW;AAEXe,EAAAA;AAFW,CAAf;AAKA,eAAeG,MAAf","sourcesContent":["import swal from 'sweetalert'\r\nimport { ButtonList } from 'sweetalert/typings/modules/options/buttons'\r\n\r\ninterface ButtonEvent {\r\n    className: string,\r\n    eventName: string,\r\n    execute: (e: Event) => void\r\n}\r\n\r\nexport function showMessage(\r\n    title: string,\r\n    message: string,\r\n    buttons: ButtonList | (string | boolean)[] = [false, true],\r\n    buttonEvents: ButtonEvent[] | null = null\r\n) {\r\n    const sw = swal({\r\n        title: title,\r\n        text: message,\r\n        buttons: buttons\r\n    })\r\n    if (buttonEvents != null) {\r\n        for (const buttonEvent of buttonEvents) {\r\n            document.querySelector(`.${buttonEvent.className}`)?.addEventListener(buttonEvent.eventName, (e) => buttonEvent.execute(e))\r\n        }\r\n    }\r\n\r\n    return sw\r\n}\r\n\r\nexport function showNotification(message: string, duration_s: number = 2.3) {\r\n    return swal(message, {\r\n        buttons: [false, false],\r\n        timer: duration_s * 1000\r\n    })\r\n}\r\n\r\nconst Alerts = {\r\n    showMessage,\r\n    showNotification\r\n}\r\n\r\nexport default Alerts"]},"metadata":{},"sourceType":"module"}