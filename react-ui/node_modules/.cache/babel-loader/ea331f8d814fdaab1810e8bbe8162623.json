{"ast":null,"code":"import CONFIG from '../../server/config';\nimport { doLogin } from '../../state/actions/action';\nimport { store } from '../../index';\nimport Server from '../../server/server';\nexport async function attemptLogin(username, password) {\n  const result = await Server.tryLogin(username, password);\n\n  if (result == true) {// CALL STORE HERE \n  } else {\n    alert(result);\n  }\n}\nexport async function attemptSignup(username, password) {\n  const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\n    'username': username,\n    'password': password\n  });\n\n  if (loginResponse.status === 201) {\n    store.dispatch(doLogin(username));\n    return true;\n  } else return loginResponse.data.error;\n}","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/onlinechess/src/pages/Authentication/Authentication.ts"],"names":["CONFIG","doLogin","store","Server","attemptLogin","username","password","result","tryLogin","alert","attemptSignup","loginResponse","AXIOSINSTANCE","post","status","dispatch","data","error"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AAEA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAO,eAAeC,YAAf,CAA4BC,QAA5B,EAA8CC,QAA9C,EAAgE;AACnE,QAAMC,MAAM,GAAG,MAAMJ,MAAM,CAACK,QAAP,CAAgBH,QAAhB,EAA0BC,QAA1B,CAArB;;AAEA,MAAIC,MAAM,IAAI,IAAd,EAAoB,CAChB;AACH,GAFD,MAEO;AACHE,IAAAA,KAAK,CAACF,MAAD,CAAL;AACH;AACJ;AAED,OAAO,eAAeG,aAAf,CAA6BL,QAA7B,EAA+CC,QAA/C,EAAiE;AACpE,QAAMK,aAAa,GAAG,MAAMX,MAAM,CAACY,aAAP,CAAqBC,IAArB,CAA0B,QAA1B,EAAoC;AAC5D,gBAAYR,QADgD;AAE5D,gBAAYC;AAFgD,GAApC,CAA5B;;AAIA,MAAIK,aAAa,CAACG,MAAd,KAAyB,GAA7B,EAAkC;AAC9BZ,IAAAA,KAAK,CAACa,QAAN,CAAed,OAAO,CAACI,QAAD,CAAtB;AACA,WAAO,IAAP;AACH,GAHD,MAKI,OAAOM,aAAa,CAACK,IAAd,CAAmBC,KAA1B;AACP","sourcesContent":["import CONFIG from '../../server/config'\r\n\r\nimport { doLogin } from '../../state/actions/action'\r\nimport { store } from '../../index'\r\nimport Server from '../../server/server'\r\n\r\nexport async function attemptLogin(username: string, password: string) {\r\n    const result = await Server.tryLogin(username, password)\r\n\r\n    if (result == true) {\r\n        // CALL STORE HERE \r\n    } else {\r\n        alert(result)\r\n    }\r\n}\r\n\r\nexport async function attemptSignup(username: string, password: string) {\r\n    const loginResponse = await CONFIG.AXIOSINSTANCE.post('/users', {\r\n        'username': username,\r\n        'password': password\r\n    })\r\n    if (loginResponse.status === 201) {\r\n        store.dispatch(doLogin(username))\r\n        return true\r\n    }\r\n    else\r\n        return loginResponse.data.error\r\n}"]},"metadata":{},"sourceType":"module"}