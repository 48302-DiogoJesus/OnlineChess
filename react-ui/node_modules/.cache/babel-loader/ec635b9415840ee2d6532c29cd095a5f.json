{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\jesus\\\\Desktop\\\\PG\\\\Personal\\\\1-Web\\\\TS\\\\OnlineChess\\\\chessbackend\\\\react-ui\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import{BoardObject}from\"../../../domain/board\";import{getOpponent,PieceColor}from\"../../../domain/piece\";import GameState from\"./GameState\";export var ClientType;(function(ClientType){ClientType[ClientType[\"PLAYER_WHITE\"]=0]=\"PLAYER_WHITE\";ClientType[ClientType[\"PLAYER_BLACK\"]=1]=\"PLAYER_BLACK\";ClientType[ClientType[\"VIEWER\"]=2]=\"VIEWER\";ClientType[ClientType[\"UNKNOWN\"]=3]=\"UNKNOWN\";})(ClientType||(ClientType={}));function buildMultiplayerGS(local_username,remoteGame,clientType){var local_pieces=clientType===ClientType.PLAYER_BLACK?PieceColor.BLACK:PieceColor.WHITE;var opponent_pieces=getOpponent(local_pieces);var opponent_username=remoteGame.player_w==local_username?remoteGame.player_b:remoteGame.player_w;var curr_turn=BoardObject.fromMoves(remoteGame.moves).turn;var turn_username=curr_turn==local_pieces?local_username:opponent_username;var winner_username=null;if(remoteGame.winner!=null){if(remoteGame.winner==local_pieces){winner_username=local_username;}else{winner_username=opponent_username;}}return{board:BoardObject.fromMoves(remoteGame.moves),winner:remoteGame.winner,local_pieces:local_pieces,game_id:remoteGame._id,opponent_pieces:opponent_pieces,client_type:clientType,local_username:local_username,opponent_username:opponent_username,turn_username:turn_username,winner_username:winner_username,views:remoteGame.views};}function updateFromRemote(prevState,remoteGame){var board=BoardObject.fromMoves(remoteGame.moves);var winner=board.winner;var local_pieces=prevState.local_pieces;var game_id=prevState.game_id;var opponent_pieces=getOpponent(prevState.local_pieces);var client_type=prevState.client_type;var local_username=prevState.local_username;var opponent_username=remoteGame.player_w==local_username?remoteGame.player_b:remoteGame.player_w;var turn_username=board.turn===local_pieces?local_username:opponent_username;var winner_username=null;if(remoteGame.winner!=null){if(remoteGame.winner==local_pieces){winner_username=local_username;}else{winner_username=opponent_username;}}var views=remoteGame.views;return{board:board,winner:winner,local_pieces:local_pieces,game_id:game_id,opponent_pieces:opponent_pieces,client_type:client_type,local_username:local_username,opponent_username:opponent_username,turn_username:turn_username,winner_username:winner_username,views:views};}function calcClientType(gameState,username){if(username==null){return ClientType.VIEWER;}if(username==gameState.player_w){return ClientType.PLAYER_WHITE;}else if(gameState.player_b==username||gameState.player_b==null){// If im player2 join like that. If no one is player2 and i am not player1 join\nreturn ClientType.PLAYER_BLACK;}else{return ClientType.VIEWER;}}function isMultiplayerGS(gs){return Object.keys(gs).length===Object.keys(defaultGameState).length;}// Private. Just useful to isMultiplayerGS function\nfunction defaultGameState(){return _objectSpread(_objectSpread({},GameState.defaultGameState()),{},{game_id:\"\",opponent_pieces:PieceColor.BLACK,client_type:ClientType.PLAYER_WHITE,local_username:\"\",opponent_username:\"\",turn_username:\"\",winner_username:\"\",views:0});}var Multiplayer={buildMultiplayerGS:buildMultiplayerGS,updateFromRemote:updateFromRemote,calcClientType:calcClientType,isMultiplayerGS:isMultiplayerGS};export default Multiplayer;","map":{"version":3,"sources":["C:/Users/jesus/Desktop/PG/Personal/1-Web/TS/OnlineChess/chessbackend/react-ui/src/pages/GamePage/GameState/MultiplayerGS.ts"],"names":["BoardObject","getOpponent","PieceColor","GameState","ClientType","buildMultiplayerGS","local_username","remoteGame","clientType","local_pieces","PLAYER_BLACK","BLACK","WHITE","opponent_pieces","opponent_username","player_w","player_b","curr_turn","fromMoves","moves","turn","turn_username","winner_username","winner","board","game_id","_id","client_type","views","updateFromRemote","prevState","calcClientType","gameState","username","VIEWER","PLAYER_WHITE","isMultiplayerGS","gs","Object","keys","length","defaultGameState","Multiplayer"],"mappings":"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","sourcesContent":["import { BoardObject } from \"../../../domain/board\";\r\nimport { getOpponent, PieceColor } from \"../../../domain/piece\";\r\nimport { RemoteGame } from \"../../../server/server\";\r\nimport GameState, { IGameState } from \"./GameState\";\r\n\r\nexport enum ClientType {\r\n    PLAYER_WHITE,\r\n    PLAYER_BLACK,\r\n    VIEWER,\r\n    UNKNOWN\r\n}\r\n\r\nexport interface IMultiplayerGS extends IGameState {\r\n    /* Has all the GameState properties + opponent_pieces */\r\n    game_id: string\r\n    opponent_pieces: PieceColor,\r\n    client_type: ClientType,\r\n\r\n    local_username: string\r\n    opponent_username: string | null\r\n    turn_username: string\r\n    winner_username: string | null\r\n\r\n    views: number\r\n}\r\n\r\nfunction buildMultiplayerGS(\r\n    local_username: string,\r\n    remoteGame: RemoteGame,\r\n    clientType: ClientType\r\n): IMultiplayerGS {\r\n    const local_pieces = clientType === ClientType.PLAYER_BLACK\r\n        ? PieceColor.BLACK\r\n        : PieceColor.WHITE\r\n\r\n    const opponent_pieces = getOpponent(local_pieces)\r\n\r\n    const opponent_username = remoteGame.player_w == local_username\r\n        ? remoteGame.player_b\r\n        : remoteGame.player_w\r\n\r\n    const curr_turn = BoardObject.fromMoves(remoteGame.moves).turn\r\n\r\n    const turn_username = curr_turn == local_pieces\r\n        ? local_username\r\n        : opponent_username!!\r\n\r\n    var winner_username = null\r\n    if (remoteGame.winner != null) {\r\n        if (remoteGame.winner == local_pieces) {\r\n            winner_username = local_username\r\n        } else {\r\n            winner_username = opponent_username\r\n        }\r\n    }\r\n\r\n    return {\r\n        board: BoardObject.fromMoves(remoteGame.moves),\r\n        winner: remoteGame.winner,\r\n        local_pieces: local_pieces,\r\n\r\n        game_id: remoteGame._id,\r\n        opponent_pieces: opponent_pieces,\r\n        client_type: clientType,\r\n\r\n        local_username,\r\n        opponent_username,\r\n        turn_username,\r\n        winner_username,\r\n\r\n        views: remoteGame.views\r\n    }\r\n}\r\n\r\nfunction updateFromRemote(\r\n    prevState: IMultiplayerGS,\r\n    remoteGame: RemoteGame\r\n): IMultiplayerGS {\r\n\r\n    const board: BoardObject = BoardObject.fromMoves(remoteGame.moves)\r\n    const winner: PieceColor | null = board.winner\r\n    const local_pieces: PieceColor = prevState.local_pieces\r\n\r\n    const game_id = prevState.game_id\r\n    const opponent_pieces: PieceColor = getOpponent(prevState.local_pieces)\r\n    const client_type: ClientType = prevState.client_type\r\n\r\n    const local_username = prevState.local_username\r\n    const opponent_username = remoteGame.player_w == local_username ? remoteGame.player_b : remoteGame.player_w\r\n    const turn_username = board.turn === local_pieces\r\n        ? local_username\r\n        : opponent_username!!\r\n\r\n    var winner_username = null\r\n    if (remoteGame.winner != null) {\r\n        if (remoteGame.winner == local_pieces) {\r\n            winner_username = local_username\r\n        } else {\r\n            winner_username = opponent_username\r\n        }\r\n    }\r\n\r\n    const views = remoteGame.views\r\n\r\n    return {\r\n        board,\r\n        winner,\r\n        local_pieces,\r\n\r\n        game_id,\r\n        opponent_pieces,\r\n        client_type,\r\n\r\n        local_username,\r\n        opponent_username,\r\n        turn_username,\r\n        winner_username,\r\n\r\n        views\r\n    }\r\n}\r\n\r\nfunction calcClientType(gameState: RemoteGame, username: string | null): ClientType {\r\n    if (username == null) {\r\n        return ClientType.VIEWER\r\n    }\r\n    if (username == gameState.player_w) {\r\n        return ClientType.PLAYER_WHITE\r\n    } else if (gameState.player_b == username || gameState.player_b == null) {\r\n        // If im player2 join like that. If no one is player2 and i am not player1 join\r\n        return ClientType.PLAYER_BLACK\r\n    } else {\r\n        return ClientType.VIEWER\r\n    }\r\n}\r\n\r\nfunction isMultiplayerGS(gs: object) {\r\n    return (Object.keys(gs).length === (Object.keys(defaultGameState).length))\r\n}\r\n\r\n// Private. Just useful to isMultiplayerGS function\r\nfunction defaultGameState(): IMultiplayerGS {\r\n    return {\r\n        ...GameState.defaultGameState(),\r\n        game_id: \"\",\r\n        opponent_pieces: PieceColor.BLACK,\r\n        client_type: ClientType.PLAYER_WHITE,\r\n\r\n        local_username: \"\",\r\n        opponent_username: \"\",\r\n        turn_username: \"\",\r\n        winner_username: \"\",\r\n\r\n        views: 0\r\n    }\r\n}\r\nconst Multiplayer = {\r\n    buildMultiplayerGS,\r\n    updateFromRemote,\r\n\r\n    calcClientType,\r\n    isMultiplayerGS\r\n}\r\n\r\nexport default Multiplayer\r\n\r\n"]},"metadata":{},"sourceType":"module"}